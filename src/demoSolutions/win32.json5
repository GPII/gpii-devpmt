{
"com.freedomscientific.jaws": {
        "name": "JAWS",
        "contexts": {
            "OS": [
                {
                    "id": "win32"
                }
            ]
        },
        "capabilities": [
            "http://registry\\.gpii\\.net/common/screenReaderTTS/enabled"
        ],
        "settingsHandlers": {
            "configuration1": {
                "type": "gpii.settingsHandlers.INISettingsHandler",
                "liveness": "manualRestart",
                "options": {
                     "filename": "${{environment}.APPDATA}\\Freedom Scientific\\JAWS\\17.0\\Settings\\enu\\DEFAULT.JCF"
                },
                "supportedSettings": {
                    "Braille.attributeRotationDelay": {
                        "title": "Attribute rotation rate [Utilities >> JAWS settings center >> Braille >> Braille marking]",
                        "description": "When in Attribute Mode and characters have multiple attributes, determines how long each attribute should be shown for. This value is in Milliseconds.",
                        "type": "number",
                        "multipleOf": 1,
                        "default": 1000
                    },
                    "Braille.AutoPanMode ": {
                        "title": "auto pan mode [Utilities >> JAWS settings center >> Braille >> General >> Panning]",
                        "description": "AutoPan Algorithm 0=off, 1=move display minimally to include whole word containing cursor, 2=MatchUserPan, 3=move display to show whole word at cursor nearest the middle of the display area, 4=maximize text after cursor, 5=maximize text before cursor, 6=autopan to default structured segment 255=Smart Autopan, autopan using the best algorithm for the current situation",
                        "enum": [0, 1, 2, 3, 4, 5, 6, 255],
                        "enumLabels": ["off", "move display minimally to include whole word containing cursor", "match user pan", "move display to show whole word at cursor nearest the middle of the display area", "maximize text after cursor", "maximize text before cursor", "autopan to default structured segment", "Smart Autopan, autopan using the best algorithm for the current situation"],
                        "default": 255
                    },
                    "Braille.BrailleMessages ": {
                        "title": "Enable flash message [Utilities >> JAWS settings center >> Braille >> Flash messages]",
                        "description": "Whether or not to show Flash Messages ",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Braille.BrailleMode": {
                        "schema": {
                            "title": "Braille mode",
                            "description": "",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ],
                            "enumLabels": [
                                "line",
                                "structured",
                                "speech output",
                                "attribute indicators"
                            ]
                        }
                    },
                    "Braille.BrailleShowMarking": {
                        "title": "Braille marking for highlight [Utilities >> JAWS settings center >> Braille >> Braille Marking] ; Braille marking for bold [Utilities >> JAWS settings center >> Braille >> Braille Marking] ; Braille marking for underline        [Utilities >> JAWS settings center >> Braille >> Braille Marking] ; Braille marking for italic [Utilities >> JAWS settings center >> Braille >> Braille Marking] ; Braille marking for strikeout [Utilities >> JAWS settings center >> Braille >> Braille Marking] ; Braille marking for script defined markups [Utilities >> JAWS settings center >> Braille >> Braille Marking]",
                        "description": "Show Marking may be any combination of the following ored together brlMarkNothing= 0, brlMarkText = 1, brlMarkBold = 2, brlMarkItalic = 4, brlMarkUnderline = 8, brlMarkStrikeout = 16, brlMarkGraphic = 32, brlMarkHighlight = 64, brlMarkColor= 128, // see brlOptColorsToMark string option brlMarkExtended=256, // things like spelling and grammatical errors in MSWord etc, script defined marking brlMarkDoubleStrikeout=512, brlMarkSuperscript=1024, brlMarkSubscript=2048, brlMarkShadow=4096, brlMarkOutline=8192, brlMarkEmboss=16384, brlMarkEngrave=32768, Note when Extended marking is on, JAWS calls the PointNeedsMarking function passing in the coordinates of each cell to determine whether text at that location requires marking. This is useful when the attribute you want to mark is not actually known to JAWS such as the red and green zigzags in MSWord indicating spelling or grammatical errors.",
                        "type": "integer",
                        "multipleOf": 1,
                        "minValue": 0,
                        "maxValue": 65536,
                        "default": 64
                    },
                    "Braille.BrailleSleepMode ": {
                        "title": " enable braille sleep mode [Utilities >> JAWS settings center >> Braille >> General]",
                        "description": "Set to 1 to turn off Braille driver, typically used to disable Braille for a specific application",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Braille.BrailleVerbosity ": {
                        "title": "verbosity level for message prefixes (beginner/intermediate/advacned) [Utilities >> JAWS settings center >> Braille >> Flash messages ]",
                        "description": "Sets Braille verbosity for Flash messages, 0 beginner, 1 intermediate, 2 advanced ",
                        "enum": [0, 1, 2],
                        "enumLabels": ["beginner", "intermediate", "advanced"]
                    },
                    "Braille.EightDotBraille ": {
                        "title": "display text in 8 dot braille mode [Utilities >> JAWS settings center >> Braille >> General ]",
                        "description": "eight dot braille mode 0=six dots mode, 1 = eight dots mode",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Braille.MessagePrefixes ": {
                        "title": "enable message prefixes [Utilities >> JAWS settings center >> Braille >> Flash messages ]",
                        "description": "If a display has no Status Cells, whether or not to prepend the Message Prefix to the Flash Message",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Braille.MessageTime": {
                        "title": "flash message timeout [Utilities >> JAWS settings center >> Braille >> Flash messages]",
                        "description": "when a Flash message is sent to the display via a script, how long it should be shown for if not specified by the script. measured in milliseconds",
                        "type": "number",
                        "multipleOf": 1,
                        "default": 5000
                    },
                    "Braille.ReversePanningButtons ": {
                        "title": "reverse panning buttons [Utilities >> JAWS settings center >> Braille >> General >> Panning]",
                        "description": "Whether or not panning buttons are reversed.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Braille.StructuredModeReverseOrder": {
                        "title": "reverse order of structured data [Utilities >> JAWS settings center >> Braille >> Structured mode]",
                        "description": "If off, order is dlg info|group info|focus info, If on, order is focus info|group info|dialog info",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Braille.WordWrap ": {
                        "title": "enable word wrap [Utilities >> JAWS settings center >> Braille >> General ]",
                        "description": "Whether or not to allow words to be split in order to maximize the use of the Braille display. Ignored if panning is set to fixed increment",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "HTML.Abbreviations": {
                        "schema": {
                            "title": "Abbreviations",
                            "description": "Whether to expand abbreviations.  If this is enabled, abbreviations with a title attribute will have their title read instead of the on screen text.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "HTML.Acronyms": {
                        "schema": {
                            "title": "Acronyms",
                            "description": "Whether to expand acronyms.  If this is enabled, acronyms with a title attribute will have their title read instead of the on screen text.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "FSCasts.EnableNotifications": {
                        "title": "Notify about new FSCasts [JAWS Settings Center >> Miscellaneous]",
                        "description": "Whether to have JAWS display a dialog when new podcasts from Freedom Scientific are available.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "HTML.AccessKeys": {
                        "title": "Speak Access Keys Within Web Page [Utilies >> JAWS Setting Center >> Web/HTML/PDF >> Reading]",
                        "description": "0 don't include HTML Element access keys, 1 include them",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "HTML.ExpandAbbreviations": {
                        "title": "Expand Abbreviations [Utilities >> JAWS Settings Center >> Web/ HTML/ PDFs >> Reading]",
                        "description": "whether or not to expand abbreviations (using the abbr tag)",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "HTML.ExpandAcronyms": {
                        "title": "Expand Acronyms [Utilities >> JAWS Settings Center >> Web/ HTML/ PDFs >> Reading]",
                        "description": "whether or not to expand acronyms (using the acronym tag)",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "HTML.FilterConsecutiveDuplicateLinks": {
                        "schema": {
                            "title": "Filter Consecutive Duplicate Links",
                            "description": "Whether to skip (not announce) consecutive duplicate links.",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "HTML.FormFieldPromptOptions": {
                        "title": "For a Form Field Prompt Speak [Utilies >> JAWS Setting Center >> Web/HTML/PDF >> Miscellaneous]",
                        "description": "0 favor label tag, 1 favor title attribute, 2 favor alt attribute, 3 favor longest, 4 use both label and title if different, 5 use both label and alt if different",
                        "enum": [0, 1, 2, 3, 4, 5],
                        "enumLabels": ["favor label tag", "favor title attribute", "favor alt attribute", "favor longest", "use both label and title if different", "use both label and alt if different"],
                        "default": 0
                    },
                    "HTML.FormsModeAutoOff": {
                        "title": "Select forms mode-auto/semiauto/manual [Utilities >> JAWS Settings Center >> Forms mode]",
                        "description": "Whether or not Forms Mode is automatically turned off when the current page is updated 1 means turn forms mode off automatically (default), 0 means leave Forms Mode on",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "HTML.IgnoreInlineFrames": {
                        "title": "ignore inline frames [Utilities >> JAWS Settings Center >> Web/ HTML/ PDFs >> Heading & Frames]",
                        "description": "Inline frames are often used for advertising 0 do not ignore inline frames, 1 ignore them",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "HTML.IncludeGraphics": {
                        "title": "Include Image [Utilities >> JAWS Settings Center >> Web/ HTML/ PDFs >> Images/ Graphics]",
                        "description": "0 means to never include graphics 1 means to include graphics that have labels, i.e. alt=attributes 2 means to include all graphics",
                        "enum": [0, 1, 2],
                        "enumLabels": ["never include graphics", "include graphics that have labels, i.e. alt=attributes", "include all graphics"],
                        "default": 1
                    },
                    "HTML.IndicateColSpan": {
                        "title": "Indicate ColSpan for Braille [Utilies >> JAWS Setting Center >> Web/HTML/PDF >> Tables]",
                        "description": "Whether to announce column spans when reading table data.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "HTML.SayAllOnDocumentLoad": {
                        "title": "Document and Web Pages Automatically Read When Loaded  [Utilities >> JAWS Setting Center >> Web/HTML/PDF >> Reading]",
                        "description": "Whether to automatically read pages when they're first loaded.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "HTML.SmartNavigation": {
                        "title": "Smart Navigation  [Utilities >> JAWS Setting Center >> Web/HTML/PDF >> Navigation]",
                        "description": "Whether to enable \"smart navigation\".",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "HTML.TextBlockLength": {
                        "title": "Text Block Length [Utilities >> JAWS Settings Center >> Web/ HTML/ PDFs >> Navigation]",
                        "description": "The number of consecutive characters that must appear for JAWS to treat this as a block of text",
                        "type": "number",
                        "multipleOf": 1,
                        "default": 25
                    },
                    "Options.AllCapsIndicator": {
                        "schema": {
                            "title": "AllCapsIndicator",
                            "description": "The text to read before text that appears in all capital letters.",
                            "type": "string",
                            "default": "all cap"
                        }
                    },

                    "Options.AllowMouseEchoWhenMuted": {
                        "title": "Allow Mouse Echo [JAWS setting center >> Speech Options]",
                        "description": "Whether to echo mouse movement when otherwise muted.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.AllowSpeechOnDemandWhenMuted": {
                        "title": "Allow Reading Commands  [JAWS setting center >> Speech Options]",
                        "description": "Whether to allow speech on demand when otherwise muted.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Options.AllowTypingEchoWhenMuted": {
                        "title": "Allow Typing Echo [JAWS setting center >> Speech Options]",
                        "description": "Whether to echo typed keys when otherwise muted.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.BrailleDisplay": {
                        "schema": {
                            "title": "BrailleDisplay",
                            "description": "The braille display to use.",
                            "type": "string",
                            "default": "Braille1"
                        }
                    },
                    "Options.CapIndicator": {
                        "schema": {
                            "title": "CapIndicator",
                            "description": "The text to read before a capital letter.",
                            "type": "string",
                            "default": "cap"
                        }
                    },
                    "Options.CaretBlinkRate": {
                        "schema": {
                            "title": "CaretBlinkRate",
                            "description": "how fast the caret blinks, milliseconds on/off",
                            "type": "number",
                            "default": 53,
                            "multipleOf": 1,
                            "minValue": 1
                        }
                    },
                    "Options.CaretDetect": {
                        "schema": {
                            "title": "CaretDetect",
                            "description": "how many cursor blinks are used to locate the caret",
                            "type": "number",
                            "default": 1,
                            "minValue": 1,
                            "multipleOf": 1
                        }
                    },
                    "Options.CaretDetectTimeOut": {
                        "schema": {
                            "title": "CaretDetectTimeOut",
                            "description": "The number of milliseconds before JAWS for Windows will give up looking for the caret",
                            "type": "number",
                            "default": 250,
                            "minValue": 0,
                            "multipleOf": 1
                        }
                    },
                    "Options.Case": {
                        "schema": {
                            "title": "Case",
                            "description": "Indicate case of spoken text with inflection change",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.CustomPageSummary": {
                        "schema": {
                            "title": "CustomPageSummary",
                            "description": "this setting determines what happens when a virtual document loads for which a custom page summary has been defined 0 do nothing (a SayAll will be started as normal) 1 The summary will be spoken and focus left on the page at the place defined by the page 2 the summary will be presented in the virtual viewer for the user to immediately read. The user must press Escape to return to the actual document. Note this setting should generally be set from Personalized Web Settings",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "enumLabels": [
                                "do nothing (a SayAll will be started as normal)",
                                "The summary will be spoken and focus left on the page at the place defined by the page",
                                "the summary will be presented in the virtual viewer for the user to immediately read"
                            ]
                        }
                    },
                    "Options.DetectKeyboardInputLanguage": {
                        "title": "Detect Keyboard Languages [JAWS Settings Center >> Text Processing >> General]",
                        "description": "Whether to detect the language used by the keyboard.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Options.Dictionary": {
                        "schema": {
                            "title": "Dictionary",
                            "description": "process text through the dictionary 0=off, 1 on",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    // TODO: Get more details for this setting.
                    // There's not even anything in the JAWS documentation.
                    "Options.DosScreenReader": {
                        "schema": {
                            "title": "DosScreenReader",
                            "description": "",
                            "type": "",
                            "default": 0,
                            "enum": [],
                            "enumLabels": []
                        }
                    },
                    // TODO: Verify this, especially the mapping.
                    "Options.Filter": {
                        "schema": {
                            "title": "Filter",
                            "description": "Determines how repeated characters are handled.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ],
                            "enumLabels": [
                                "Say First 3 Repeated Characters",
                                "Say First 4 Repeated Characters",
                                "Say First 5 Repeated Characters",
                                "Say First 6 Repeated Characters",
                                "Say All Repeated Characters",
                                "Count Repeated Characters"
                            ]
                        }
                    },
                    "Options.GeneralizeDialect": {
                        "title": "Generalize Dialect [JAWS Settings Center >> Text Processing >> General]",
                        "description": "Whether to switch languages when encountering content with the same underlying base language.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Options.Indentation": {
                        "schema": {
                            "title": "Indentation",
                            "description": "whether or not to indicateSayu indentation",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.IndicateAttributesInDialogsAndMenus": {
                        "schema": {
                            "title": "IndicateAttributesInDialogsAndMenus",
                            "description": "set to 1 to enable announcement of attributes etc in dialogs and menus if the scheme allows for it",
                            "type": "number",
                            "default": 0,
                            // TODO: All of these 0,1 examples are a firm use case for an application-specific transform mechanism so that our JSON payloads can use true/false.
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.IndicateCaps": {
                        "schema": {
                            "title": "IndicateCaps",
                            "description": "When to indicate the presence of capital letters.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ],
                            // TODO: Once this is moved into the LSR, these will all be message keys.
                            "enumLabels": [
                                "Off",
                                "indicate caps when spelling or when navigating by character",
                                "also indicate caps when reading by words",
                                "also indicate caps when reading by lines"
                            ]
                        }
                    },
                    "Options.IndicateNewlinesAndParagraphs": {
                        "schema": {
                            "title": "IndicateNewlinesAndParagraphs",
                            "description": "Whether/how to indicate the presence of new lines and paragraphs.",
                            "type": "",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4
                            ],
                            "enumLabels": [
                                "off",
                                "indicate when typing and the editor or wordprocessor wraps to a new line",
                                "indicate when arrowing left/right or using left/right with modifiers",
                                "indicate when typing and also when arrowing. the method of indication is controlled by the Speech and Sounds scheme in use",
                                "indicate when reading text containing newline characters bitwise or the values together to indicate in multiple contexts eg a value of"
                            ]
                        }
                    },
                    "Options.IndicateSelected": {
                        "schema": {
                            "title": "IndicateSelected",
                            "description": "",
                            "type": "number",
                            "default": 2,
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "enumLabels": []
                        }
                    },
                    "Options.InitialNumlockState": {
                        "title": "Initial state of NumLock key [ JAWS Settings Center >> Keyboard >> General]",
                        "description": "The initial state of the numLock key.",
                        "enum": [0, 1, 2],
                        "enumLabels": ["off at startup", "on at startup", "leave unmodified"],
                        "default": 0
                    },
                    // TODO: Doesn't seem to work.
                    "Options.InsertKeyMode": {
                        "schema": {
                            "title": "InsertKeyMode",
                            "description": "operating mode of insert key 0=JAWS, 1= Sticky",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "JAWS",
                                "Sticky"
                            ]
                        }
                    },
                    // TODO: VERIFY WITH EXTREME PREJUDICE
                    "Options.JAWSInsertKey": {
                        "schema": {
                            "title": "JAWSInsertKey",
                            "description": "Which insert keys can be used as a JAWS Insert 0=none 1=Numpad Insert 2=Extended Insert 3=both Numpad and Extended",
                            "type": "number",
                            "default": 3,
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ],
                            "enumLabels": [
                                "none",
                                "Numpad Insert",
                                "Extended Insert",
                                "both Numpad and Extended"
                            ]
                        }
                    },
                    // TODO: This now appears to be a "level" option.  Verify by looking at the INI file.
                    "Options.JAWSPunctuationEnabled": {
                        "schema": {
                            "title": "JAWSPunctuationEnabled",
                            "description": "Which punctuation marks to speak.",
                            "type": "number",
                            "default": 2,
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ],
                            "enumLabels": [
                                "None",
                                "Some",
                                "Most",
                                "All"
                            ]
                        }
                    },
                    // TODO: See if there is documentation on the supported options.
                    "Options.KeyboardType": {
                        "schema": {
                            "title": "KeyboardType",
                            "description": "Can be one of the types defined in default.jkm",
                            "type": "string",
                            "default": "Laptop"
                        }
                    },
                    "Options.KeyRepeat": {
                        "schema": {
                            "title": "KeyRepeat",
                            "description": "Whether or not to allow repeated keys.  Repeated keys are allowed by default.",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.LanguageDetection": {
                        "schema": {
                            "title": "LanguageDetection",
                            "description": "automatic Language detection, 1 on, 0 off",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.LeftShiftSkipBack": {
                        "schema": {
                            "title": "LeftShiftSkipBack",
                            "description": "1=during SayAll, left shift will skip back and right shift will skip forward 0=vice versa",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "during SayAll, right shift will skip back and left shift will skip forward",
                                "during SayAll, left shift will skip back and right shift will skip forward"
                            ]
                        }
                    },
                    // TODO: Verify default
                    "Options.LessSpeechMode": {
                        "title": "Less Speech Options [JAWS Settings Center >> Speech Options]",
                        "description": "How to behave when in \"less speech mode\".",
                        "enum": [0, 1],
                        "enumLabels": ["Speech On Demand", "Mute Speech"]
                    },

                    "Options.LinePauses": {
                        "schema": {
                            "title": "LinePauses",
                            "description": "pause at end of a line 0=off, 1=on",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    // TODO: Verify this and improve the description.
                    "Options.ListBoxCheckBoxes": {
                        "schema": {
                            "title": "ListBoxCheckBoxes",
                            "description": "0 off, 1 non-ownerdrawn listboxes, 2 also check listboxes with LBS_OWNERDRAWVARIABLE or LBS_OWNERDRAWFIXED window style.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "enumLabels": [
                                "off",
                                "non-ownerdrawn listboxes",
                                "also check listboxes with LBS_OWNERDRAWVARIABLE or LBS_OWNERDRAWFIXED window style."
                            ]
                        }
                    },
                    "Options.LowerOtherAppsVolumeWhileJAWSIsRunning": {
                        "title": "Lower audio volume of programs while JAWS speaks [JAWS Settings Center >> User]",
                        "description": "Whether to lower the volume of programs otehr than JAWS when speaking.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.MixedCase": {
                        "schema": {
                            "title": "MixedCase",
                            "description": "words with embedded capital letters are spoken as separate words 0=off, 1 = on",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.MouseEchoSpeaksControlTypeAndState": {
                        "title": "Speak control type and state of item [JAWS Settings Center >> Mouse Echo]",
                        "description": "Whether to speak the type of control and state of item when mousing over a control.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Options.MouseEchoSpeaksHelpAndDescription": {
                        "title": "Speak description of item [JAWS Settings Center >> Mouse Echo]",
                        "description": "Whether to speak the description of an item on mouseover.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.MouseMovementStopsSpeech": {
                        "title": "Mouse Echo Interrupt [JAWS Settings Center >> Mouse Echo]",
                        "description": "Whether to stop speaking when the mouse is moved.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Options.MouseSpeechDelay": {
                        "title": "Mouse Echo Delay [JAWS Settings Center >> Mouse Echo]",
                        "description": "How long to delay speaking content under the mouse, in milliseconds.  Defaults to 0 (no delay).",
                        "type": "number",
                        "multipleOf": 1,
                        "default": 0
                    },
                    "Options.MouseSpeechEchoUnit": {
                        "title": "Mouse Echo Unit [JAWS Settings Center >> Mouse Echo]",
                        "description": "The unit of text to hear when the mouse pauses over text in a control.  Defaults to reading the whole line.",
                        "enum": [0, 1, 2, 3],
                        "enumLabels": ["character", "word", "line", "paragraph"],
                        "default": 2
                    },
                    "Options.MouseSpeechEnabled": {
                        "title": "Enable Mouse Echo [JAWS Settings Center >> Mouse Echo]",
                        "description": "Whether or not to enable the mouse echo, i.e. reading content under the mouse pointer.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.Numbers": {
                        "schema": {
                            "title": "Numbers",
                            "description": "How to announce numbers.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ],
                            "enumLabels": [
                                "off (handled by synth)",
                                "digits",
                                "pairs",
                                "full numbers"
                            ]
                        }
                    },
                    "Options.OnScreenKeyboard": {
                        "title": "Allow On Screen Keyboards [ JAWS Settings Center >> Keyboard >> General]",
                        "description": "Whether to allow on screen keyboards.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.ProcessToolTipEvent": {
                        "schema": {
                            "title": "ProcessToolTipEvent",
                            "description": "Whether or not to process tooltip events.",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "Options.ProgressBarUpdateInterval": {
                        "schema": {
                            "title": "ProgressBarUpdateInterval",
                            "description": "0 don't announce ProgressBar updates, non-zero value specifies time in milliseconds which must elapse before the next update is announced",
                            "type": "number",
                            "default": 5000,
                            "multipleOf": 1,
                            "minValue": 0
                        }
                    },
                    "Options.QuickKeyNavigationMode": {
                        "schema": {
                            "title": "QuickKeyNavigationMode",
                            "description": "Currently this option is linked to the virtual cursor only 0 off, 1 on, 2 only on during SayAll",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "enumLabels": [
                                "off",
                                "on",
                                "only on during SayAll"
                            ]
                        }
                    },
                    "Options.ReadingInterrupt": {
                        "schema": {
                            "title": "ReadingInterrupt",
                            "description": "pressing a key that is bound to a macro will interrupt speech 0=off, 1 = on",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.Repetitions": {
                        "schema": {
                            "title": "Repetitions",
                            "description": "Whether or not to indicate repeated characters, 1 on, 0 off",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.SayAllIgnoreShiftKeys": {
                        "schema": {
                            "title": "SayAll Ignore Shift Keys",
                            "description": "Allows sticky keys to be used, i.e.: ignores shift keys during SayAll. User can use left/right arrow to do same functions",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "Options.SayAllIndicateCaps": {
                        // The same as http://registry.gpii.net/common/announceCapitals. We should just reuse it and override with custom values
                        "schema": {
                            "title": "Announce capitals",
                            "description": "During SayAll, indicate initial cap or capitalized word",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "Options.SayAllMode": {
                        "schema": {
                            "title": "SayAllMode",
                            "description": "Sets the amount of text which SayAll sends to the synthesizer as a single unit",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "enumLabels": [
                                "line",
                                "sentence",
                                "paragraph"
                            ]
                        }
                    },
                    "Options.SayAllScheme": {
                        "title": "Say All Scheme [ JAWS Settings Center >> Say All]",
                        "description": "Which user-defined \"Say All\" scheme to use. ",
                        "type": "string"
                    },

                    "Options.SayBlankLineCount": {
                        "schema": {
                            "title": "SayBlankLineCount",
                            "description": "In 'say all' mode, whether to announce the number of blank lines.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    // TODO: Verify what this does and fill in the description.
                    "Options.SayCursorShapeChange": {
                        "schema": {
                            "title": "SayCursorShapeChange",
                            "description": "Whether to announce a change in the shape of the cursor.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    // TODO: Verify what this does and fill in the description.
                    "Options.SayDollars": {
                        "schema": {
                            "title": "SayDollars",
                            "description": "Whether to announce currency symbols.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    // TODO: Verify what this does and fill in the description.
                    "Options.SayNumericDates": {
                        "schema": {
                            "title": "SayNumericDates",
                            "description": "How to announce numeric dates.  With no translation, dates are read as numbers.  With some translation, dd-mm-yy values are read as text.  With extended translation, both dd-mm-yy and dd-mm values are read as text.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "enumLabels": [
                                "no translation",
                                "some translation",
                                "extended translation"
                            ]
                        }
                    },
                    // TODO: Verify what this does and fill in the description.
                    "Options.SaySelectedFirst": {
                        "schema": {
                            "title": "SaySelectedFirst",
                            "description": "Whether to announce the selected text first.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.SayStateFirst": {
                        "schema": {
                            "title": "SayStateFirst",
                            "description": "Whether to announce the window state before title/text.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.SayWindowTypeFirst": {
                        "schema": {
                            "title": "SayWindowTypeFirst",
                            "description": "Say Window type before window title/text 0=off, 1 = on",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    // TODO: Improve this. Figure out if there are other valid options.
                    "Options.Scheme": {
                        "schema": {
                            "title": "Scheme",
                            "description": "Whether or not to intercept CreateDIBSection Note that this value is only read once per JAWS session at startup thus changing this value while JAWS is running has no effect.",
                            "type": "string",
                            "default": "Classic"
                        }
                    },
                    // TODO: Verify and come up with a better description.
                    "Options.ScreenEcho": {
                        "schema": {
                            "title": "ScreenEcho",
                            "description": "0=off, 1= highlight, 2 = all",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "enumLabels": [
                                "off",
                                "highlight",
                                "all"
                            ]
                        }
                    },
                    // TODO: Verify and come up with a description.
                    "Options.SimultaneousSynthAndWave": {
                        "schema": {
                            "title": "SimultaneousSynthAndWave",
                            "description": "",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },

                    "Options.SingleDigitThreshold": {
                        "title": "If Number Contains [JAWS Settings Center >> Text Processing >> Number and Date Processing]",
                        "description": "The number of digits a number must contain before it is read as single digits (like a phone number).  Defaults to five.",
                        "type": "number",
                        "multipleOf": 1,
                        "default": 5
                    },

                    "Options.SkimReadingIndication": {
                        "schema": {
                            "title": "SkimReadingIndication",
                            "description": "Whether or not to indicate (via a beep) when skimming over text units for which the regular expression returns FALSE. 0=off, 1=on (beep every 20 units skimmed over)",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    // TODO: Discuss, this is not meaningful unless it's coupled with an application for context.
                    "Options.SleepMode": {
                        "schema": {
                            "title": "SleepMode",
                            "description": "Whether to put JAWS to sleep.  In the context of a specific application, this preference can be set to disable JAWS within that application.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },

                    "Options.SmartWordReading": {
                        "title": "Smart Word Reading [JAWS Settings Center >> Text Processing >> General]",
                        "description": "Whether or not to enable \"smart reading\" when using the \"Say Word\" command.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },

                    "Options.SpeakANSIChars": {
                        "schema": {
                            "title": "SpeakANSIChars",
                            "description": "Whether or not to announce ANSI characters.",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },

                    "Options.SpeakCharacterValueAsMultibyteSequence": {
                        "title": "Speak Character Value As Sequence of Multibyte Values [JAWS Settings Center >> Graphics and Symbols]",
                        "description": "Whether to read unicode characters as a series of multi-byte values.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.SpeakCharacterValueInHex": {
                        "title": "Speak Character Value In Hex [JAWS Settings Center >> Graphics and Symbols]",
                        "description": "Whether to announce the hex value of a character when numpad 5 is pressed three times quickly.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.SpeakNumbersSepByDashesAsDigits": {
                        "title": "In Number Contains Dashes [JAWS Settings Center >> Text Processing >> Number and Date Processing]",
                        "description": "Whether to read numbers that contain dashes (such as phone numbers) as a series of digits.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },

                    "Options.SpeechHistory": {
                        "title": "Enable Speech History [JAWS Settings Center >> Speech Verbosity]",
                        "description": "Whether to read through the 50-item speech history when \"insert+spacebar\" and then \"h\" are pressed.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Options.SpeechMode": {
                        "title": "Speech Mode [JAWS Settings Center >> Speech Options]",
                        "description": "The \"speech mode\" to use (full or \"less\").",
                        "enum": [0, 1],
                        "enumLabels": ["full speech", "less speech"],
                        "default": 0
                    },
                    "Options.SpellAlphanumericData": {
                        "title": "Spell Alphanumeric Data [JAWS Settings Center >> Text Processing >> General]",
                        "description": "How to read alphanumeric data.",
                        "enum": [0, 1, 2],
                        "enumLabels": ["read as appears", "spell", "spell phonetically"],
                        "default": 0
                    },

                    "Options.SpellPhonetic": {
                        "schema": {
                            "title": "SpellPhonetic",
                            "description": "How to announce word spellings.",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "spell normal",
                                "spell phonetic"
                            ]
                        }
                    },
                    // TODO: Verify.  Look at the INI file and suggest defaults?
                    "Options.Synthesizer": {
                        "schema": {
                            "title": "Synthesizer",
                            "description": "The synthesizer to use/ Available synthesizers are listed in JfW.INI",
                            "type": "string",
                            "default": "Synth1"
                        }
                    },
                    "Options.SynthesizerResetFrequency": {
                        "schema": {
                            "title": "SynthesizerResetFrequency",
                            "description": "How often to reset communication with the synthesizer, in milliseconds.",
                            "type": "number",
                            "default": 2000,
                            "multipleOf": 1,
                            "minValue": 0
                        }
                    },

                    "Options.TetherJawsToPC": {
                        "schema": {
                            "title": "TetherJawsToPC",
                            "description": "Whether or not to tether the JAWS cursor to the PC cursor.  If this is set to 'on', whenever the Pc cursor moves, the Jaws cursor will follow it. If this is set to 'off', the JAWS cursor is indifferent to Pc cursor movements (this is the default).",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.TextAnalyser": {
                        "title": "Text Analyzer [JAWS Settings Center >> Text Analyzer]",
                        "description": "The type of alert to use when announcing formatting errors.",
                        "enum": [0, 1, 2, 3],
                        "enumLabels": ["turn off", "indicate with sound", "speak count", "describe inconsistencies"],
                        "default": 0
                    },
                    "Options.TextAnalyserSymbolFlags": {
                        "title": "Indicate Mismatched Symbols [JAWS Settings Center >> Text Analyzer]",
                        "description": "Which mismatched symbols (such as mismatched opening and closing parentheses) to indicate when editing. Defaults to announcing all supported mismatching symbols."
                    },
                    "Options.TextAnalyserTypeFlags": {
                        "title": "Inconsistencies to Check  [JAWS Settings Center >> Text Analyzer]",
                        "description": "Which types of inconsistencies to check.  Defaults to \"all\"."
                    },
                    "Options.TouchKeyboardChildPanelNotification": {
                        "title": "Touch Alternative Character Panel Popup Notification [JAWS Settings Center >> Keyboard >> Touch Keyboard]",
                        "description": "How to announce the appearance of a panel of alternate keys in the touch keyboard.",
                        "enum": [0, 1],
                        "enumLabels": ["by both message and sound", "by sound only"],
                        "default": 0
                    },
                    "Options.TouchKeyboardNotification": {
                        "title": "Touch Keyboard Notification [JAWS Settings Center >> Keyboard >> Touch Keyboard]",
                        "description": "Whether/how to notify when the touch keyboard appears/disappears.",
                        "enum": [0, 1, 2],
                        "enumLabels": ["by message", "by sound", "by both message and sound"],
                        "default": 2
                    },
                    "Options.TouchTypingEcho": {
                        "title": "Touch Typing Echo [JAWS Settings Center >> Keyboard >> Touch Keyboard]",
                        "description": "Whether/how to echo text entered using the touch keyboard.",
                        "enum": [0, 1, 2, 3],
                        "enumLabels": ["none", "characters", "words", "both characters and words"],
                        "default": 3
                    },
                    "Options.TouchTypingMode": {
                        "title": "Touch Typing Mode [JAWS Settings Center >> Keyboard >> Touch Keyboard]",
                        "description": "Which keyboard mode to use for the touch keyboard.",
                        "enum": [0, 1],
                        "enumLabels": ["standard", "touch typing"],
                        "default": 1
                    },
                    // TODO: Verify and fill in the description.
                    // Can't find information in the help file.
                    "Options.TreeViewCheckBoxes": {
                        "schema": {
                            "title": "TreeViewCheckBoxes",
                            "description": "",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.TypingEcho": {
                        "schema": {
                            "title": "Typing echo",
                            "description": "Typing echo mode, its value can be either character, word, char&Word or none",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1,
                                2,
                                3
                            ],
                            "enumLabels": [
                                "off",
                                "character",
                                "words",
                                "character and words"
                            ]
                        }
                    },
                    "Options.TypingInterrupt": {
                        "schema": {
                            "title": "TypingInterrupt",
                            "description": "Whether to stop speaking when the user types.",
                            "type": "number",
                            "default": 1,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.UseExtendedKeys": {
                        "schema": {
                            "title": "UseExtendedKeys",
                            "description": "Determines whether Extended and Numpad keys should be processed separately. 0=Treat Extended and Numpad keys the same 1=Differentiate between Extended and Numpad keys",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "Treat Extended and Numpad keys the same",
                                "Differentiate between Extended and Numpad keys"
                            ]
                        }
                    },
                    "Options.UseVirtualInfoInFormsMode": {
                        "schema": {
                            "title": "UseVirtualInfoInFormsMode",
                            "description": "Whether to use information from the virtual HTML area for prompts in Forms mode. Warning: this will not always result in accurate information, particularly on pages where there are errors in the HTML coding which result in forms mode and virtual mode being out of synchronization",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    // TODO: Verify and fill this out.
                    "Options.UseWindowsKeyboardHook": {
                        "schema": {
                            "title": "UseWindowsKeyboardHook",
                            "description": "",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1
                            ],
                            "enumLabels": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "Options.Verbosity": {
                        "schema": {
                            "title": "Verbosity",
                            "description": "how much speech to say beginner=0 (most speech), intermediate = 1, advanced = 2 (least speech)",
                            "type": "number",
                            "default": 0,
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "enumLabels": [
                                "most speech",
                                "intermediate",
                                "least speech"
                            ]
                        }
                    },
                    "Options.VIRTUALMSAAREFRESH": {
                        "schema": {
                            "title": "VIRTUALMSAAREFRESH",
                            "description": "determines how often an embedded ActiveX control causes the Virtual HTML area to be updated when receiving rapid ValueChange events from MSAA 0 means allow refresh rate to be dictated by MSAA a positive number means only refresh every X miliseconds -1 means don't refresh at all.",
                            "type": "number",
                            "default": 0,
                            "multipleOf": 1,
                            "minValue": -1
                        }
                    },
                    "Options.VTcolor": {
                        "title": "Color [JAWS Settings Center >> Visual Tracking >> Visual Settings]",
                        "description": "The colour to use when highlighting items selected using the touch cursor.",
                        "type": "number",
                        "multipleOf": 1
                    },
                    "Options.VTspacing": {
                        "title": "Spacing [JAWS Settings Center >> Visual Tracking >> Visual Settings]",
                        "description": "The amount of spacing between the highlight box and the highlighted item.",
                        "type": "number",
                        "multipleOf": 1
                    },
                    "Options.VTstyle": {
                        "title": "Style [JAWS Settings Center >> Visual Tracking >> Visual Settings]",
                        "description": "The style of highlighting to use.",
                        "enum": [0, 1, 2],
                        "enumLabels": ["box", "block", "underline"],
                        "default": 0
                    },
                    "Options.VTthickness": {
                        "title": "Thickness [JAWS Settings Center >> Visual Tracking >> Visual Settings]",
                        "description": "How thick to make the \"box\" and \"underline\" highlighting styles.",
                        "type": "number",
                        "multipleOf": 1
                    },
                    "Options.VTtransparency": {
                        "title": "Transparency [JAWS Settings Center >> Visual Tracking >> Visual Settings]",
                        "description": "How transparent to make the visual highlighting of selected items.",
                        "type": "number",
                        "multipleOf": 1
                    },
                    "Options.VTUseTouchCursor": {
                        "title": "Highlight Touch Cursor [JAWS Settings Center >> Visual Tracking]",
                        "description": "Whether or not to highlight selected items when using the touch cursor or touch gestures.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "Options.VTUseVirtualPCCursor": {
                        "title": "Use Virtual PC Cursor [ JAWS Settings Center >> Miscellaneous]",
                        "description": "Whether to use the virtual PC cursor when reading HTML documents.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "Options.VTUseVirtualRibbon": {
                        "title": "Use Virtual Ribbon Menu [ JAWS Settings Center >> Miscellaneous]",
                        "description": "Whether to turn on the virtual ribbon menu.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 0
                    },
                    "OSM.PixelsPerSpace": {
                        "title": "Pixels per space [JAWS settings center >> Miscellaneous ]",
                        "description": "when simulating spaces in blank portions of a line, number of pixels represented by each space",
                        "type": "number",
                        "multipleOf": 1,
                        "default": 8
                    },
                    "OSM.PixelsPerTab": {
                        "title": "Pixels Per Tab [JAWS settings center >> Miscellaneous]",
                        "description": "The number of pixels per tab, used to estimate the number of tab spaces contained within the blank portion of a line.",
                        "type": "number",
                        "multipleOf": 1,
                        "default": 10
                    },
                    "OSM.TableDetection": {
                        "title": "Table Presentation Information [JAWS Settings Center >> Web/HTML/PDFs >> Tables]",
                        "description": "Which tables to read as tables (data tables, or all tables).",
                        "enum": [0, 1],
                        "enumLabels": ["for data tables only", "for all tables"],
                        "default": 0
                    },
                    "OSM.TrackFocusRect": {
                        "title": "track focus rectangle [JAWS settings center >> Miscellaneous]",
                        "description": "Set to one causes MAGic to track the focus rectangle in standard controls that utilize focus rectangles.",
                        "enum": [
                            0,
                            1
                        ],
                        "enumLabels": [
                            "off",
                            "on"
                        ],
                        "default": 1
                    },
                    "OSM.UnderlineProximity": {
                        "title": "underline proximity [JAWS settings center >> Miscellaneous]",
                        "description": "how far away in pixels can an underline be before being considered an actual underline",
                        "type": "number",
                        "multipleOf": 1,
                        "default": 0
                    },
                    // TODO: Document default.
                    "Touch.FlickVelocityMin": {
                        "title": "Flick Velocity [JAWS Settings Center >> Gestures]",
                        "description": "The minimum finger velocity to treat as a \"flick\".",
                        "type": "number",
                        "multipleOf": 1
                    },
                    // TODO: Document default.
                    "Touch.TapEventDurationMax": {
                        "title": "Explore Delay [JAWS Settings Center >> Gestures]",
                        "description": "The delay between touching a touch screen and displaying the explore menu, in milliseconds.",
                        "type": "number",
                        "multipleOf": 1
                    },
                    // TODO: Document default.
                    "Touch.TapInterEventDurationMax": {
                        "title": "Double Tap Speed [JAWS Settings Center >> Gestures]",
                        "description": "The threshold for treating two taps as a double-tap, expressed in milliseconds between taps.",
                        "type": "number",
                        "multipleOf": 1
                    },
                    // TODO: Document default.
                    "Touch.TapTranslationMax": {
                        "title": "Tap Radius [JAWS Settings Center >> Gestures]",
                        "description": "The size of the finger contact spot on the touch screen.",
                        "type": "number",
                        "multipleOf": 1
                    },
                    // I don't think this is something that the user should change since we always store the voice settings into our own profile name "GPII"
                    "Voice Profiles.ActiveVoiceProfileName": {
                        "schema": {
                            "title": "Active Voice Profile Name",
                            "description": "The active voice profile",
                            "type": "string",
                            "default": "GPII"
                        }
                    }
                },
                "capabilitiesTransformations": {
                    "Voice Profiles\\.ActiveVoiceProfileName": {
                        "literalValue": "GPII"
                    },
                    "Options\\.SayAllIndicateCaps": "http://registry\\.gpii\\.net/common/announceCapitals",
                    "Options\\.TypingEcho": {
                        // (1=keyEcho, 2=wordEcho, 3=key&wordEcho)
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "http://registry\\.gpii\\.net/common/keyEcho",
                                    "rightPath": "http://registry\\.gpii\\.net/common/wordEcho",
                                    "operator": "&&"
                                }
                            },
                            "true": 3,
                            "false": {
                                "transform": {
                                    "type": "fluid.transforms.condition",
                                    "conditionPath": "http://registry\\.gpii\\.net/common/keyEcho",
                                    "true": 1,
                                    "false": {
                                        "transform": {
                                            "type": "fluid.transforms.condition",
                                            "conditionPath": "http://registry\\.gpii\\.net/common/wordEcho",
                                            "true": 2
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "Options\\.SayAllMode": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/readingUnit",
                            "match": {
                                "line": 0,
                                "sentence": 1,
                                "paragraph": 2
                            }
                        }
                    },
                    "Braille\\.BrailleMode": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/brailleMode",
                            "match": {
                                "line": 0,
                                "structured": 1,
                                "speechHistory": 2
                            }
                        }
                    },
                    // TODO: Same question about the value space here.
                    "Options\\.SayAllIgnoreShiftKeys": "http://registry\\.gpii\\.net/common/stickyKeys"
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/announceCapitals": "options\\.SayAllIndicateCaps",
                    "http://registry\\.gpii\\.net/common/keyEcho": {
                        "transform": {
                            "type": "valueMapper",
                            "defaultInputPath": "options\\.TypingEcho",
                            // (1=keyEcho, 2=wordEcho, 3=key&wordEcho)
                            "match": [
                                {
                                    "inputValue": 1,
                                    "outputValue": true
                                },
                                {
                                    "inputValue": 3,
                                    "outputValue": true
                                }
                            ],
                            "noMatch": {
                                "outputValue": false
                            }
                        }
                    },
                    "http://registry\\.gpii\\.net/common/wordEcho": {
                        "transform": {
                            "type": "valueMapper",
                            "defaultInputPath": "options\\.TypingEcho",
                            // (1=keyEcho, 2=wordEcho, 3=key&wordEcho)
                            "match": [
                                {
                                    "inputValue": 2,
                                    "outputValue": true
                                },
                                {
                                    "inputValue": 3,
                                    "outputValue": true
                                }
                            ],
                            "noMatch": {
                                "outputValue": false
                            }
                        }
                    },
                    "http://registry\\.gpii\\.net/common/readingUnit": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "options\\.SayAllMode",
                            "match": [
                                {
                                    "inputValue": 0,
                                    "outputValue": "line"
                                },
                                {
                                    "inputValue": 1,
                                    "outputValue": "sentence"
                                },
                                {
                                    "inputValue": 2,
                                    "outputValue": "paragraph"
                                }
                            ]
                        }
                    },
                    "http://registry\\.gpii\\.net/common/brailleMode": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "Braille\\.BrailleMode",
                            "match": [
                                {
                                    "inputValue": 0,
                                    "outputValue": "line"
                                },
                                {
                                    "inputValue": 1,
                                    "outputValue": "structured"
                                },
                                {
                                    "inputValue": 2,
                                    "outputValue": "speechHistory"
                                }
                            ]
                        }
                    }
                }
            },
            "configuration2": {
                "type": "gpii.settingsHandlers.INISettingsHandler",
                "liveness": "manualRestart",
                "options": {
                    "filename": "${{environment}.APPDATA}\\Freedom Scientific\\JAWS\\17.0\\Settings\\VoiceProfiles\\GPII.VPF"
                },
                "supportedSettings": {
                    "Options.PrimarySynthesizer": {},
                    "ENU-Global.Rate": {},
                    "ENU-JAWSCursor.Rate": {},
                    "ENU-Keyboard.Rate": {},
                    "ENU-MenuAndDialog.Rate": {},
                    "ENU-Message.Rate": {},
                    "ENU-PCCursor.Rate": {},
                    "ENU-Global.Pitch": {},
                    "ENU-JAWSCursor.Pitch": {},
                    "ENU-Keyboard.Pitch": {},
                    "ENU-MenuAndDialog.Pitch": {},
                    "ENU-Message.Pitch": {},
                    "ENU-PCCursor.Pitch": {},
                    "ENU-Global.Volume": {},
                    "ENU-JAWSCursor.Volume": {},
                    "ENU-Keyboard.Volume": {},
                    "ENU-MenuAndDialog.Volume": {},
                    "ENU-Message.Volume": {},
                    "ENU-PCCursor.Volume": {},
                    "ENU-Global.Punctuation": {},
                    "ENU-JAWSCursor.Punctuation": {},
                    "ENU-Keyboard.Punctuation": {},
                    "ENU-MenuAndDialog.Punctuation": {},
                    "ENU-Message.Punctuation": {},
                    "ENU-PCCursor.Punctuation": {},
                    "ENU-Global.SynthLangString": {},
                    "ENU-JAWSCursor.SynthLangString": {},
                    "ENU-Keyboard.SynthLangString": {},
                    "ENU-MenuAndDialog.SynthLangString": {},
                    "ENU-Message.SynthLangString": {},
                    "ENU-PCCursor.SynthLangString": {}
                },
                "capabilitiesTransformations": {
                    "Options\\.PrimarySynthesizer": "http://registry\\.gpii\\.net/common/speechSynthesizer",
                    "ENU-Global\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-JAWSCursor\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-Keyboard\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-MenuAndDialog\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-Message\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-PCCursor\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-Global\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-JAWSCursor\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-Keyboard\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-MenuAndDialog\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-Message\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-PCCursor\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-Global\\.Volume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-JAWSCursor\\.Volume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-Keyboard\\.Volume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-MenuAndDialog\\.Volume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-Message\\.Volume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-PCCursor\\.Volume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-Global\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-JAWSCursor\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-Keyboard\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-MenuAndDialog\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-Message\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-PCCursor\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-Global\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-JAWSCursor\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-Keyboard\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-MenuAndDialog\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-Message\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-PCCursor\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/speechSynthesizer": "Options\\.PrimarySynthesizer",
                    "http://registry\\.gpii\\.net/common/speechRate": "ENU-Global\\.Rate",
                    "http://registry\\.gpii\\.net/common/pitch": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "ENU-Global\\.Pitch",
                            "factor": 0.010101,
                            "offset": -0.010101
                        }
                    },
                    "http://registry\\.gpii\\.net/common/volume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "ENU-Global\\.Volume",
                            "factor": 0.01
                        }
                    },
                    "http://registry\\.gpii\\.net/common/punctuationVerbosity": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "ENU-Global\\.Punctuation",
                            "match": [
                                {
                                    "inputValue": 0,
                                    "outputValue": "none"
                                },
                                {
                                    "inputValue": 1,
                                    "outputValue": "some"
                                },
                                {
                                    "inputValue": 2,
                                    "outputValue": "most"
                                },
                                {
                                    "inputValue": 3,
                                    "outputValue": "all"
                                }
                            ]
                        }
                    },
                    "http://registry\\.gpii\\.net/common/auditoryOutLanguage": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "ENU-Global\\.SynthLangString",
                            "match": {
                                "American English": "en-US",
                                "British English": "en-GB",
                                "French": "fr",
                                "French Canadian": "fr-CA",
                                "Italian": "it",
                                "Brazilian Portuguese": "pt-BR",
                                "German": "de",
                                "Latin American Spanish": "es-US",
                                "Castilian Spanish": "es-ES",
                                "Finnish": "fi"
                            }
                        }
                    }
                }
            }
        },
        "launchHandlers": {
            "launcher": {
                "type": "gpii.launchHandlers.flexibleHandler",
                "options": {
                    "verifySettings": true,
                    "retryOptions": {
                        "rewriteEvery": 0,
                        "numRetries": 20
                    },
                    "getState": [
                        {
                            "type": "gpii.processReporter.find",
                            "command": "jfw.exe"
                        }
                    ],
                    "setTrue": [
                        {
                            "type": "gpii.launch.exec",
                            "command": "\"${{registry}.HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\JAWS17.exe\\}\""
                        }
                    ],
                    "setFalse": [
                        {
                            "type": "gpii.windows.closeProcessByName",
                            "filename": "jfw.exe"
                        },
                        {
                            "type": "gpii.windows.closeProcessByName",
                            "filename": "fsSynth32.exe"
                        },
                        {
                            "type": "gpii.windows.closeProcessByName",
                            "filename": "jhookldr.exe"
                        }
                    ]
                }
            }
        },
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.registryKeyExists",
                "hKey": "HKEY_LOCAL_MACHINE",
                "path": "Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\JAWS17.exe",
                "subPath": "",
                "dataType": "REG_SZ"
            }
        ]
    },
    /* Pre-Tony JAWS
    "com.freedomscientific.jaws": {
        "name": "JAWS",
        "contexts": {
            "OS": [
                {
                    "id": "win32"
                }
            ]
        },
        "settingsHandlers": {
            "configuration1": {
                "type": "gpii.settingsHandlers.INISettingsHandler",
                "liveness": "manualRestart",
                "options": {
                    "filename": "${{environment}.APPDATA}\\Freedom Scientific\\JAWS\\17.0\\Settings\\enu\\DEFAULT.JCF"
                },
                "supportedSettings": { // Full description of settings in JAWS: https://github.com/gloob/gpii-settings/blob/master/AT-Tools/JAWS/Default.jcf.csv
                // Note that we will never actually support schemas for application-specific settings here in the solutions registry. These are left here as the
                // remnant of some historical research until we have a place to transfer them in a "sharded ontology" for what could be called "uncommon terms" ...
                    "Voice Profiles.ActiveVoiceProfileName": { // I don't think this is something that the user should change since we always store the voice settings into our own profile name "GPII"
                        "schema": {
                            "title": "Active Voice Profile Name",
                            "description": "The active voice profile",
                            "type": "string",
                            "default": "GPII"
                        }
                    },
                    "options.SayAllIndicateCaps": { // The same as http://registry.gpii.net/common/announceCapitals. We should just reuse it and override with custom values
                        "schema": {
                            "title": "Announce capitals",
                            "description": "During SayAll, indicate initial cap or capitalized word",
                            "type": "boolean",
                            "default": 0
                        }
                    },
                    "options.TypingEcho": {
                        "schema": {
                            "title": "Typing echo",
                            "description": "Typing echo mode, its value can be either character, word, char&Word or none",
                            "type": "number",
                            "default": 0,
                            "enum": [0, 1, 2, 3]
                            // TODO: We should present the value to the user in a human readable format
                            // 0: "off", 1: "character", 2: "words", 3: "character and words"
                        }
                    },
                    "options.SayAllMode": {
                        "schema": {
                            "title": "SayAllMode",
                            "description": "Sets the amount of text which SayAll sends to the synthesizer as a single unit",
                            "type": "number",
                            "default": 0,
                            "enum": [0, 1, 2]
                            // TODO: We should present the value to the user in a human readable format
                            // 0: "line", 1: "sentence", 2: "paragraph"
                        }
                    },
                    "Braille.BrailleMode": {
                        "schema": {
                            "title": "Braille mode",
                            "description": "",
                            "type": "number",
                            "default": 1,
                            "enum": [0, 1, 2, 3]
                            // TODO: We should present the value to the user in a human readable format
                            // 0: "line", 1: "structured", 2: "speech output", 3: "attribute indicators"
                        }
                    },
                    "options.SayAllIgnoreShiftKeys": {
                        "schema": {
                            "title": "SayAll Ignore Shift Keys",
                            "description": "Allows sticky keys to be used, i.e.: ignores shift keys during SayAll. User can use left/right arrow to do same functions",
                            "type": "boolean",
                            "default": 0
                        }
                    }
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/screenReaderTTSEnabled"
                ],
                "capabilitiesTransformations": {
                    "Voice Profiles\\.ActiveVoiceProfileName": {
                        "literalValue": "GPII"
                    },
                    "options\\.SayAllIndicateCaps": "http://registry\\.gpii\\.net/common/announceCapitals",
                    "options\\.TypingEcho": { // (1=keyEcho, 2=wordEcho, 3=key&wordEcho)
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "http://registry\\.gpii\\.net/common/keyEcho",
                                    "rightPath": "http://registry\\.gpii\\.net/common/wordEcho",
                                    "operator": "&&"
                                }
                            },
                            "true": 3,
                            "false": {
                                "transform": {
                                    "type": "fluid.transforms.condition",
                                    "conditionPath": "http://registry\\.gpii\\.net/common/keyEcho",
                                    "true": 1,
                                    "false": {
                                        "transform": {
                                            "type": "fluid.transforms.condition",
                                            "conditionPath": "http://registry\\.gpii\\.net/common/wordEcho",
                                            "true": 2
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "options\\.SayAllMode": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/readingUnit",
                            "match": {
                                "line": 0,
                                "sentence": 1,
                                "paragraph": 2
                            }
                        }
                    },
                    "Braille\\.BrailleMode": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/brailleMode",
                            "match": {
                                "line": 0,
                                "structured": 1,
                                "speechHistory": 2
                            }
                        }
                    },
                    "options\\.SayAllIgnoreShiftKeys": "http://registry\\.gpii\\.net/common/stickyKeys"
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/announceCapitals": "options\\.SayAllIndicateCaps",
                    "http://registry\\.gpii\\.net/common/keyEcho": {
                        "transform": {
                            "type": "valueMapper",
                            "defaultInputPath": "options\\.TypingEcho", // (1=keyEcho, 2=wordEcho, 3=key&wordEcho)
                            "match": [{
                                inputValue: 1,
                                outputValue: true
                            }, {
                                inputValue: 3,
                                outputValue: true
                            }],
                            "noMatch": {
                                "outputValue": false
                            }
                        }
                    },
                    "http://registry\\.gpii\\.net/common/wordEcho": {
                        "transform": {
                            "type": "valueMapper",
                            "defaultInputPath": "options\\.TypingEcho", // (1=keyEcho, 2=wordEcho, 3=key&wordEcho)
                            "match": [{
                                inputValue: 2,
                                outputValue: true
                            }, {
                                inputValue: 3,
                                outputValue: true
                            }],
                            "noMatch": {
                                "outputValue": false
                            }
                        }
                    },
                    "http://registry\\.gpii\\.net/common/readingUnit": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "options\\.SayAllMode",
                            "match": [{
                                inputValue: 0,
                                outputValue: "line"
                            }, {
                                inputValue: 1,
                                outputValue: "sentence"
                            }, {
                                inputValue: 2,
                                outputValue: "paragraph"
                            }]
                        }
                    },
                    "http://registry\\.gpii\\.net/common/brailleMode": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "Braille\\.BrailleMode",
                            "match": [{
                                inputValue: 0,
                                outputValue: "line"
                            }, {
                                inputValue: 1,
                                outputValue: "structured"
                            }, {
                                inputValue: 2,
                                outputValue: "speechHistory"
                            }]
                        }
                    }
                }
            },
            "configuration2": {
                "type": "gpii.settingsHandlers.INISettingsHandler",
                "liveness": "manualRestart",
                "options": {
                    "filename": "${{environment}.APPDATA}\\Freedom Scientific\\JAWS\\17.0\\Settings\\VoiceProfiles\\GPII.VPF"
                },
                "supportedSettings": {
                    "Options.PrimarySynthesizer": {},
                    "ENU-Global.Rate": {},
                    "ENU-JAWSCursor.Rate": {},
                    "ENU-Keyboard.Rate": {},
                    "ENU-MenuAndDialog.Rate": {},
                    "ENU-Message.Rate": {},
                    "ENU-PCCursor.Rate": {},
                    "ENU-Global.Pitch": {},
                    "ENU-JAWSCursor.Pitch": {},
                    "ENU-Keyboard.Pitch": {},
                    "ENU-MenuAndDialog.Pitch": {},
                    "ENU-Message.Pitch": {},
                    "ENU-PCCursor.Pitch": {},
                    "ENU-Global.Volume": {},
                    "ENU-JAWSCursor.Volume": {},
                    "ENU-Keyboard.Volume": {},
                    "ENU-MenuAndDialog.Volume": {},
                    "ENU-Message.Volume": {},
                    "ENU-PCCursor.Volume": {},
                    "ENU-Global.Punctuation": {},
                    "ENU-JAWSCursor.Punctuation": {},
                    "ENU-Keyboard.Punctuation": {},
                    "ENU-MenuAndDialog.Punctuation": {},
                    "ENU-Message.Punctuation": {},
                    "ENU-PCCursor.Punctuation": {},
                    "ENU-Global.SynthLangString": {},
                    "ENU-JAWSCursor.SynthLangString": {},
                    "ENU-Keyboard.SynthLangString": {},
                    "ENU-MenuAndDialog.SynthLangString": {},
                    "ENU-Message.SynthLangString": {},
                    "ENU-PCCursor.SynthLangString": {}
                },
                "capabilities": [],
                "capabilitiesTransformations": {
                    "Options\\.PrimarySynthesizer": "http://registry\\.gpii\\.net/common/speechSynthesizer",
                    "ENU-Global\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-JAWSCursor\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-Keyboard\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-MenuAndDialog\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-Message\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-PCCursor\\.Rate": "http://registry\\.gpii\\.net/common/speechRate",
                    "ENU-Global\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-JAWSCursor\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-Keyboard\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-MenuAndDialog\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-Message\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-PCCursor\\.Pitch": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                                    "factor": 99,
                                    "offset": 1
                                }
                            }
                        }
                    },
                    "ENU-Global\\.Volume": {
                       "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-JAWSCursor\\.Volume": {
                       "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-Keyboard\\.Volume": {
                       "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-MenuAndDialog\\.Volume": {
                       "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-Message\\.Volume": {
                       "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-PCCursor\\.Volume": {
                       "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volume",
                            "factor": 100
                        }
                    },
                    "ENU-Global\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-JAWSCursor\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-Keyboard\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-MenuAndDialog\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-Message\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-PCCursor\\.Punctuation": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 1,
                                "most": 2,
                                "all": 3
                            }
                        }
                    },
                    "ENU-Global\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-JAWSCursor\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-Keyboard\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-MenuAndDialog\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-Message\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    },
                    "ENU-PCCursor\\.SynthLangString": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en-US": "American English",
                                "en-GB": "British English",
                                "fr": "French",
                                "fr-CA": "French Canadian",
                                "it": "Italian",
                                "pt-BR": "Brazilian Portuguese",
                                "de": "German",
                                "es-US": "Latin American Spanish",
                                "es-ES": "Castilian Spanish",
                                "fi": "Finnish"
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/speechSynthesizer": "Options\\.PrimarySynthesizer",
                    "http://registry\\.gpii\\.net/common/speechRate": "ENU-Global\\.Rate",
                    "http://registry\\.gpii\\.net/common/speechRate": "ENU-JAWSCursor\\.Rate",
                    "http://registry\\.gpii\\.net/common/speechRate": "ENU-Keyboard\\.Rate",
                    "http://registry\\.gpii\\.net/common/speechRate": "ENU-MenuAndDialog\\.Rate",
                    "http://registry\\.gpii\\.net/common/speechRate": "ENU-Message\\.Rate",
                    "http://registry\\.gpii\\.net/common/speechRate": "ENU-PCCursor\\.Rate",
                    "http://registry\\.gpii\\.net/common/pitch": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "ENU-Global\\.Pitch",
                            "factor": 0.010101,
                            "offset": -0.010101
                        }
                    },
                    "http://registry\\.gpii\\.net/common/volume": {
                       "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "ENU-Global\\.Volume",
                            "factor": 0.01
                        }
                    },
                    "http://registry\\.gpii\\.net/common/punctuationVerbosity": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "ENU-Global\\.Punctuation",
                            "match": [{
                                inputValue: 0,
                                outputValue: "none"
                            }, {
                                inputValue: 1,
                                outputValue: "some"
                            }, {
                                inputValue: 2,
                                outputValue: "most"
                            }, {
                                inputValue: 3,
                                outputValue: "all"
                            }]
                        }
                    },
                    "http://registry\\.gpii\\.net/common/auditoryOutLanguage": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "ENU-Global\\.SynthLangString",
                            "match": {
                                "American English": "en-US",
                                "British English": "en-GB",
                                "French": "fr",
                                "French Canadian": "fr-CA",
                                "Italian": "it",
                                "Brazilian Portuguese": "pt-BR",
                                "German": "de",
                                "Latin American Spanish": "es-US",
                                "Castilian Spanish": "es-ES",
                                "Finnish": "fi"
                            }
                        }
                    }
                }
            }
        },
        "configure": [
            "settings.configuration1",
            "settings.configuration2"
        ],
        "restore": [
            "settings.configuration1",
            "settings.configuration2"
        ],
        "update": [
          "stop",
          "configure",
          "start"
        ],
        "start": [
            {
                "type": "gpii.launch.exec",
                "command": "\"${{registry}.HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\JAWS17.exe\\}\""
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.closeProcessByName",
                "filename": "jfw.exe"
            }
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.registryKeyExists",
                "hKey": "HKEY_LOCAL_MACHINE",
                "path": "Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\JAWS17.exe",
                "subPath": "",
                "dataType": "REG_SZ"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "jaws"
            }
        ]
    },
*/
    "com.texthelp.readWriteGold": {
        "name": "Read Write Gold",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configuration": {
                "type": "gpii.settingsHandlers.XMLHandler",
                "liveness": "manualRestart",
                "options": {
                    "filename": "${{environment}.APPDATA}\\Texthelp\\ReadAndWrite\\11\\RWSettings11.xml",
                    "encoding": "utf-8",
                    "xml-tag": "<?xml version=\"1.0\" encoding=\"utf-8\"?>"
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/languageAssistance"
                ],
                "capabilitiesTransformations": {
                    "ApplicationSettings": "ApplicationSettings"
                },
                "supportedSettings": {
                    "ApplicationSettings.AppBar.optToolbarIconSet.$t": {},
                    "ApplicationSettings.AppBar.optToolbarButtonGroupNameCurrent.$t": {},
                    "ApplicationSettings.AppBar.DocType.$t": {},
                    "ApplicationSettings.AppBar.Width.$t": {},
                    "ApplicationSettings.AppBar.ShowText.$t": {},
                    "ApplicationSettings.AppBar.optToolbarShowText.$t": {},
                    "ApplicationSettings.AppBar.LargeIcons.$t": {},
                    "ApplicationSettings.AppBar.optToolbarLargeIcons.$t": {},
                    "ApplicationSettings.Speech.optSAPI5Pitch.$t": {},
                    "ApplicationSettings.Speech.optSAPI5Speed.$t": {},
                    "ApplicationSettings.Speech.optSAPI5Volume.$t": {},
                    "ApplicationSettings.Speech.optSAPI5PauseBetweenWords.$t": {},
                    "ApplicationSettings.Speech.optSAPI5Voice.$t": {},
                    "ApplicationSettings.Speech.WebHighlighting.$t": {},
                    "ApplicationSettings.Translation.ToLanguage.$t": {},
                    "ApplicationSettings.Speech.optSAPI5SpeechHighlightContext.$t": {},
                    "ApplicationSettings.Scanning.ScanDestination.$t": {},
                    "ApplicationSettings.Scanning.ScanToFile.$t": {},
                    "ApplicationSettings.Spelling.SpellAsIType.$t": {},
                    "ApplicationSettings.Speech.optAutoUseScreenReading.$t": {}
                }
            }
        },
        "configure": [
            "settings.configuration"
        ],
        "restore": [
            "settings.configuration"
        ],
        "update": [
          "stop",
          "configure",
          "start"
        ],
        "start": [
            {
                "type": "gpii.launch.exec",
                "command": "\"${{registry}.HKEY_CURRENT_USER\\Software\\Texthelp\\Read&Write11\\InstallPath}\\ReadAndWrite.exe\""
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.closeProcessByName",
                "filename": "ReadAndWrite.exe"
            }
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.registryKeyExists",
                "hKey": "HKEY_CURRENT_USER",
                "path": "Software\\Texthelp\\Read&Write11",
                "subPath": "InstallPath",
                "dataType": "REG_SZ"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "readandwrite"
            }
        ]
    },

    "com.microsoft.windows.magnifier": {
        "name": "Windows Built-in Screen Magnifier",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.registrySettingsHandler",
                "liveness": "liveRestart",
                "options": {
                    "hKey": "HKEY_CURRENT_USER",
                    "path": "Software\\Microsoft\\ScreenMagnifier",
                    "dataTypes": {
                        "Magnification": "REG_DWORD",
                        "Invert": "REG_DWORD",
                        "FollowFocus": "REG_DWORD",
                        "FollowCaret": "REG_DWORD",
                        "FollowMouse": "REG_DWORD",
                        "MagnificationMode": "REG_DWORD",
                        "ZoomIncrement": "REG_DWORD"
                    }
                },
                "supportedSettings": {
                    "Invert": { // I don't think this is something that the user should change since we always store the voice settings into our own profile name "GPII"
                        "schema": {
                            "title": "Invert Colours",
                            "description": "Enable colour inversion for Magnifier",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "Magnification": {
                        "schema": {
                            "title": "Magnification",
                            "description": "Set up magnification level",
                            "type": "number",
                            "default": 200,
                            "min": 100,
                            "max": 1600,
                            "divisibleBy": 1
                        }
                    },
                    "FollowFocus": {
                        "schema": {
                            "title": "Magnifier follows focus",
                            "description": "Magnifier follows the keyboard focus",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "FollowCaret": {
                        "schema": {
                            "title": "Magnifier follows caret",
                            "description": "Magnifier follows the text insertion point",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "FollowMouse": {
                        "schema": {
                            "title": "Magnifier follows mouse",
                            "description": "Magnifier follows the mouse pointer",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "MagnificationMode": {
                        "schema": {
                            "title": "Magnifier position",
                            "description": "Position of the magnified area",
                            "type": "number",
                            "default": 2,
                            "enum": [1, 2, 3]
                            // TODO: We must present these values in a human readable form
                            // 1: "TopHalf", 2: "FullScreen", 3: "Lens"
                        }
                    },
                    "ZoomIncrement": {}
                },
                "capabilities": [],
                "capabilitiesTransformations": {
                    "Invert": {
                        "transform": {
                            "type": "gpii.transformer.booleanToNumber",
                            "inputPath": "http://registry\\.gpii\\.net/common/invertColours"
                        }
                    },
                    "Magnification": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/magnification",
                                    "factor": 100
                                }
                            }
                        }
                    },
                    "transform": [{
                        "type": "fluid.transforms.arrayToSetMembership",
                        "inputPath": "http://registry\\.gpii\\.net/common/tracking",
                        "outputPath": "",
                        "presentValue": 1,
                        "missingValue": 0,
                        "options": {
                            "focus": "FollowFocus",
                            "caret": "FollowCaret",
                            "mouse": "FollowMouse"
                        }
                    }],
                    "MagnificationMode": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/magnifierPosition",
                            "match": {
                                "FullScreen": 2,
                                "Lens": 3,
                                "LeftHalf": 1,
                                "RightHalf": 1,
                                "TopHalf": 1,
                                "BottomHalf": 1,
                                "Custom": 2
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/invertColours": "Invert",
                    "transform": [
                        {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "Magnification",
                            "outputPath": "http://registry\\.gpii\\.net/common/magnification",
                            "factor": 0.01
                        },
                        {
                            "type": "fluid.transforms.setMembershipToArray",
                            "inputPath": "",
                            "outputPath": "http://registry\\.gpii\\.net/common/tracking",
                            "presentValue": 1,
                            "missingValue": 0,
                            "options": {
                                "FollowFocus": "focus",
                                "FollowMouse": "mouse",
                                "FollowCaret": "caret"
                            }
                        },
                        {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "MagnificationMode",
                            "defaultOutputPath": "http://registry\\.gpii\\.net/common/magnifierPosition",
                            "match": {
                                "2": "FullScreen",
                                "3": "Lens",
                                "1": "TopHalf"
                            }
                        }
                    ]
                }
            }
        },
        "configure": [
            "settings.configure"
        ],
        "restore": [
            "settings.configure"
        ],
        "start": [
            {
                "type": "gpii.windows.enableRegisteredAT",
                "name": "magnifierpane",
                "enable": true
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.enableRegisteredAT",
                "name": "magnifierpane",
                "enable": false
            }
        ],
        "update": [
            "stop",
            "configure",
            "start"
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "Magnify"
            }
        ]
    },

    "com.microsoft.windows.onscreenKeyboard": {
        "name": "Windows Built-in Onscreen Keyboard",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.registrySettingsHandler",
                "liveness": "liveRestart",
                "options": {
                    "hKey": "HKEY_CURRENT_USER",
                    "path": "Software\\Microsoft\\Osk",
                    "dataTypes": {
                        "NavigationMode": "REG_DWORD"
                    }
                },
                "supportedSettings": {
                    "NavigationMode": { // TODO: Weird supported setting - How do we provide such use case?
                        "schema": {
                            "title": "On-Screen Keyboard",
                            "description": "Enable/Disable On-Screen Keyboard",
                            "type": "boolean",
                            "default": false
                        }
                    }
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/onScreenKeyboardEnabled"
                ],
                "capabilitiesTransformations": {
                    "NavigationMode": {
                        "literalValue": 0
                    }
                }
            }
        },
        "configure": [
            "settings.configure"
        ],
        "restore": [
            "settings.configure"
        ],
        "start": [
            {
                "type": "gpii.windows.enableRegisteredAT",
                "name": "osk",
                "enable": true
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.enableRegisteredAT",
                "name": "osk",
                "enable": false
            }
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "osk"
            }
        ]
    },


    "com.microsoft.windows.narrator": {
        "name": "Windows Built-in Narrator",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.registrySettingsHandler",
                "liveness": "liveRestart",
                "options": {
                    "hKey": "HKEY_CURRENT_USER",
                    "path": "Software\\Microsoft\\Narrator",
                    "dataTypes": {
                        "SpeechSpeed": "REG_DWORD",
                        "SpeechPitch": "REG_DWORD",
                        "InteractionMouse": "REG_DWORD",
                        "CoupleNarratorCursorKeyboard": "REG_DWORD",
                        "FollowInsertion": "REG_DWORD",
                        "EchoChars": "REG_DWORD",
                        "EchoWords": "REG_DWORD"
                    }
                },
                "supportedSettings": {
                    "SpeechSpeed": {},
                    "SpeechPitch": {},
                    "CoupleNarratorCursorKeyboard": {},
                    "FollowInsertion": {},
                    "InteractionMouse": {},
                    "EchoChars": {},
                    "EchoWords": {}
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/screenReaderTTSEnabled",
                    "http://registry\\.gpii\\.net/common/speechRate",
                    "http://registry\\.gpii\\.net/common/trackingTTS",
                    "http://registry\\.gpii\\.net/common/keyEcho",
                    "http://registry\\.gpii\\.net/common/wordEcho",
                    "http://registry\\.gpii\\.net/common/pitch"
                ],
                "capabilitiesTransformations": {
                    "SpeechSpeed": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.quantize",
                                    "inputPath": "http://registry\\.gpii\\.net/common/speechRate",
                                    /* https://msdn.microsoft.com/library/ee431826
                                     * The speed range is -10 to +10. 0 being normal, -10 is a third of normal and +10
                                     * is three times normal. The registry value is actually 0 to 20.
                                     * So this maps values between (default-speechRate / 3) and (default-speechRage * 3)
                                     * into values between 0 and 20.
                                     */
                                    "ranges": [
                                        {
                                            "upperBound": 50,
                                            "output": 0
                                        },
                                        {
                                            "upperBound": 150,
                                            "output": {
                                                "transform": {
                                                    "type": "fluid.transforms.linearScale",
                                                    "inputPath": "http://registry\\.gpii\\.net/common/speechRate",
                                                    "factor": 0.1,
                                                    "offset": -5
                                                }
                                            }
                                        },
                                        {
                                            "upperBound": 450,
                                            "output": {
                                                "transform": {
                                                    "type": "fluid.transforms.linearScale",
                                                    "inputPath": "http://registry\\.gpii\\.net/common/speechRate",
                                                    "factor": 0.033333333333,
                                                    "offset": -5
                                                }
                                            }
                                        },
                                        {
                                            "output": 20
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "SpeechPitch": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                            "factor": 20,
                            "offset": 0
                        }
                    },
                    "transform": [{
                        "type": "fluid.transforms.arrayToSetMembership",
                        "inputPath": "http://registry\\.gpii\\.net/common/trackingTTS",
                        "outputPath": "",
                        "presentValue": 1,
                        "missingValue": 0,
                        "options": {
                            "focus": "CoupleNarratorCursorKeyboard",
                            "caret": "FollowInsertion",
                            "mouse": "InteractionMouse"
                        }
                    }],
                    "EchoChars": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "false": 0,
                            "true": 1,
                            "conditionPath": "http://registry\\.gpii\\.net/common/keyEcho"
                        }
                    },
                    "EchoWords": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "false": 0,
                            "true": 1,
                            "conditionPath": "http://registry\\.gpii\\.net/common/wordEcho"
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/speechRate": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "SpeechSpeed",
                                    "right": 10,
                                    "operator": "<"
                                }
                            },
                            "true": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "SpeechSpeed",
                                    "factor": 10,
                                    "offset": 50
                                }
                            },
                            "false": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "SpeechSpeed",
                                    "factor": 30,
                                    "offset": -150
                                }
                            }
                        }
                    },
                    "http://registry\\.gpii\\.net/common/pitch": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "SpeechPitch",
                            "factor": 0.05,
                            "offset": 0
                        }
                    },
                    "transform": [{
                        "type": "fluid.transforms.setMembershipToArray",
                        "inputPath": "",
                        "outputPath": "http://registry\\.gpii\\.net/common/trackingTTS",
                        "presentValue": 1,
                        "missingValue": 0,
                        "options": {
                            "CoupleNarratorCursorKeyboard": "focus",
                            "FollowInsertion": "caret",
                            "InteractionMouse": "mouse"
                        }
                    }],
                    "http://registry\\.gpii\\.net/common/keyEcho": {
                        "transform": {
                            "type": "fluid.transforms.binaryOp",
                            "leftPath": "EchoChars",
                            "right": 0,
                            "operator": "!=="
                        }
                    },
                    "http://registry\\.gpii\\.net/common/wordEcho": {
                        "transform": {
                            "type": "fluid.transforms.binaryOp",
                            "leftPath": "EchoWords",
                            "right": 0,
                            "operator": "!=="
                        }
                    }
                }
            },
            "configureNoRoam": {
                "type": "gpii.windows.registrySettingsHandler",
                "options": {
                    "hKey": "HKEY_CURRENT_USER",
                    "path": "Software\\Microsoft\\Narrator\\NoRoam",
                    "dataTypes": {
                        "SpeechVolume": "REG_DWORD",
                        "ShowKeyboardIntroduction": "REG_DWORD",
                        "ShowBrowserSelection": "REG_DWORD"
                    }
                },
                "supportedSettings": {
                    "SpeechVolume": {},
                    "ShowKeyboardIntroduction": {},
                    "ShowBrowserSelection": {}
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/volumeTTS"
                ],
                "capabilitiesTransformations": {
                    "SpeechVolume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volumeTTS",
                            "factor": 100,
                            "offset": 0
                        }
                    },
                    "ShowKeyboardIntroduction": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "false": 0,
                            "true": 1,
                            "conditionPath": "http://registry\\.gpii\\.net/common/speakTutorialMessages"
                        }
                    },
                    "ShowBrowserSelection": {
                        "transform": {
                            "type": "fluid.transforms.literalValue",
                            "input": 0
                        }
                    }
                }
            }
        },
        "configure": [
            "settings.configure",
            "settings.configureNoRoam"
        ],
        "restore": [
            "settings.configure",
            "settings.configureNoRoam"
        ],
        "update": [
          "stop",
          "configure",
          "start"
        ],
        "start": [
            {
                "type": "gpii.windows.enableRegisteredAT",
                "name": "Narrator",
                "enable": true
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.enableRegisteredAT",
                "name": "Narrator",
                "enable": false
            }
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "org.nvda-project": {
        "name": "NVDA Screen Reader",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configs": {
                "type": "gpii.settingsHandlers.INISettingsHandler",
                "liveness": "manualRestart",
                "options": {
                    "filename": "${{environment}.APPDATA}\\nvda\\nvda.ini",
                    "allowNumberSignComments": true,
                    "allowSubSections": true
                },
                "supportedSettings": {
                    "speech.espeak.pitch": {},
                    "speech.espeak.volume": {},
                    "presentation.reportHelpBalloons": {},
                    "keyboard.speakTypedCharacters": {},
                    "keyboard.speakTypedWords": {},
                    "speech.espeak.sayCapForCapitals": {},
                    "reviewCursor.followFocus": {},
                    "reviewCursor.followCaret": {},
                    "reviewCursor.followMouse": {},
                    "speech.synth": {},
                    "speech.outputDevice": {},
                    "speech.espeak.rate": {},
                    "speech.espeak.rateBoost": {},
                    "speech.symbolLevel": {},
                    "speech.espeak.voice": {}
                },
                "capabilities": [],
                "capabilitiesTransformations": {
                    "speech\\.espeak\\.pitch": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/pitch",
                            "factor": 100
                        }
                    },
                    "speech\\.espeak\\.volume": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "http://registry\\.gpii\\.net/common/volumeTTS",
                            "factor": 100
                        }
                    },
                    "presentation\\.reportHelpBalloons": "http://registry\\.gpii\\.net/common/speakTutorialMessages",
                    "keyboard\\.speakTypedCharacters": "http://registry\\.gpii\\.net/common/keyEcho",
                    "keyboard\\.speakTypedWords": "http://registry\\.gpii\\.net/common/wordEcho",
                    "speech\\.espeak\\.sayCapForCapitals": "http://registry\\.gpii\\.net/common/announceCapitals",
                    "transform": [
                        {
                            "type": "fluid.transforms.arrayToSetMembership",
                            "inputPath": "http://registry\\.gpii\\.net/common/trackingTTS",
                            "outputPath": "",
                            "presentValue": true,
                            "missingValue": false,
                            "options": {
                                "focus": "reviewCursor\\.followFocus",
                                "caret": "reviewCursor\\.followCaret",
                                "mouse": "reviewCursor\\.followMouse"
                            }
                        },
                        {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/screenReaderTTSEnabled",
                            "match": {
                                "false": {
                                    "outputValue": {
                                        "transform": [
                                            {
                                                "type": "fluid.transforms.literalValue",
                                                "input": "silence",
                                                "outputPath": "speech\\.synth"
                                            },
                                            {
                                                "type": "fluid.transforms.literalValue",
                                                "input": "Microsoft Sound Mapper",
                                                "outputPath": "speech\\.outputDevice"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    ],
                    "speech\\.espeak\\.rate": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "right": 3.10,
                                    "operator": "/",
                                    "left": {
                                        "transform": {
                                            "type": "fluid.transforms.binaryOp",
                                            "right": 80,
                                            "operator": "-",
                                            "left": {
                                                "transform": {
                                                    "type": "fluid.transforms.condition",
                                                    "truePath": "http://registry\\.gpii\\.net/common/speechRate",
                                                    "false": {
                                                        "transform": {
                                                            "type": "fluid.transforms.binaryOp",
                                                            "leftPath": "http://registry\\.gpii\\.net/common/speechRate",
                                                            "operator": "/",
                                                            "right": 3
                                                        }
                                                    },
                                                    "condition": {
                                                        "transform": {
                                                            "type": "fluid.transforms.binaryOp",
                                                            "leftPath": "http://registry\\.gpii\\.net/common/speechRate",
                                                            "operator": "<=",
                                                            "right": 390
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "speech\\.espeak\\.rateBoost": {
                        "transform": {
                            "type": "fluid.transforms.binaryOp",
                            "leftPath": "http://registry\\.gpii\\.net/common/speechRate",
                            "operator": ">",
                            "right": 390
                        }
                    },
                    "speech\\.symbolLevel": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "match": {
                                "none": 0,
                                "some": 100,
                                "most": 200,
                                "all": 300
                            }
                        }
                    },
                    "speech\\.espeak\\.voice": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en": "en\\en",
                                "en-GB": "en\\en",
                                "en-US": "en\\en-us",
                                "en-scotland": "en\\en-sc",
                                "en-BZ": "en\\en-wi",
                                "en-BS": "en\\en-wi",
                                "en-AG": "en\\en-wi",
                                "en-AI": "en\\en-wi",
                                "af": "af",
                                "bg": "bg",
                                "bs": "bs",
                                "ca": "ca",
                                "cs": "cs",
                                "cy": "cy",
                                "da": "da",
                                "de": "de",
                                "el": "el",
                                "grc": "test\\grc",
                                "eo": "eo",
                                "es": "es",
                                "es-ES": "es",
                                "es-419": "es-la",
                                "et": "et",
                                "fi": "fi",
                                "fr": "fr",
                                "fr-BE": "fr-be",
                                "hi": "hi",
                                "hr": "hr",
                                "hu": "hu",
                                "hy": "hy",
                                "hy-arevmda": "hy-west",
                                "id": "id",
                                "is": "is",
                                "it": "it",
                                "jbo": "test\\jbo",
                                "ka": "ka",
                                "kn": "kn",
                                "ku": "ku",
                                "la": "la",
                                "lv": "lv",
                                "mk": "mk",
                                "ml": "ml",
                                "nci": "test\\nci",
                                "nl": "nl",
                                "no": "no",
                                "pap": "test\\pap",
                                "pl": "pl",
                                "pt-BR": "pt",
                                "pt-PT": "pt-pt",
                                "ro": "ro",
                                "ru": "ru",
                                "sk": "sk",
                                "sq": "sq",
                                "sr": "sr",
                                "sv": "sv",
                                "sw": "sw",
                                "ta": "ta",
                                "tr": "tr",
                                "vi": "vi",
                                "zh-cmn": "zh",
                                "cmn": "zh",
                                "zh-yue": "zh-yue",
                                "zh-yue": "yue"
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/speakTutorialMessages": "presentation\\.reportHelpBalloons",
                    "http://registry\\.gpii\\.net/common/keyEcho": "keyboard\\.speakTypedCharacters",
                    "http://registry\\.gpii\\.net/common/wordEcho": "keyboard\\.speakTypedWords",
                    "http://registry\\.gpii\\.net/common/announceCapitals": "speech\\.espeak\\.sayCapForCapitals",
                    "transform": [
                        {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "virtualBuffers\\.autoSayAllOnPageLoad.value",
                            "defaultOutputPath": "http://registry\\.gpii\\.net/common/readingUnit",
                            "match": {
                                "true": "all",
                                "false": "sentence"
                            }
                        },
                        {
                            "type": "fluid.transforms.setMembershipToArray",
                            "inputPath": "",
                            "outputPath": "http://registry\\.gpii\\.net/common/trackingTTS",
                            "presentValue": true,
                            "missingValue": false,
                            "options": {
                                "reviewCursor\\.followFocus": "focus",
                                "reviewCursor\\.followCaret": "caret",
                                "reviewCursor\\.followMouse": "mouse"
                            }
                        },
                        {
                            "type": "fluid.transforms.valueMapper",
                            "defaultOutputPath": "http://registry\\.gpii\\.net/common/punctuationVerbosity",
                            "defaultInputPath": "speech\\.symbolLevel",
                            "match": {
                                "0": "none",
                                "100": "some",
                                "200": "most",
                                "300": "all"
                            }
                        },
                        {
                            "type": "fluid.transforms.condition",
                            "outputPath": "http://registry\\.gpii\\.net/common/screenReaderTTSEnabled",
                            "false": true,
                            "true": false,
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "left": {
                                        "transform": {
                                            "type": "fluid.transforms.binaryOp",
                                            "leftPath": "speech\\.synth",
                                            "operator": "===",
                                            "right": "silence"
                                        }
                                    },
                                    "right": {
                                        "transform": {
                                            "type": "fluid.transforms.binaryOp",
                                            "leftPath": "speech\\.outputDevice",
                                            "operator": "===",
                                            "right": "Microsoft Sound Mapper"
                                        }
                                    },
                                    "operator": "&&"
                                }
                            }
                        },
                        {
                            "type": "fluid.transforms.condition",
                            "outputPath": "http://registry\\.gpii\\.net/common/speechRate",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "right": true,
                                    "operator": "===",
                                    "leftPath": "speech\\.espeak\\.rateBoost"
                                }
                            },
                            "false": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "speech\\.espeak\\.rate",
                                    "factor": 3.1,
                                    "offset": 80
                                }
                            },
                            "true": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "left": {
                                        "transform": {
                                            "type": "fluid.transforms.linearScale",
                                            "inputPath": "speech\\.espeak\\.rate",
                                            "factor": 3.1,
                                            "offset": 80
                                        }
                                    },
                                    "operator": "*",
                                    "right": 3
                                }
                            }
                        },
                        {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "speech\\.espeak\\.voice",
                            "defaultOutputPath": "http://registry\\.gpii\\.net/common/auditoryOutLanguage",
                            "match": {
                                "en\\en": "en",
                                "en\\en-us": "en-US",
                                "en\\en-sc": "en-scotland",
                                "en\\en-wi": "en-BZ",
                                "af": "af",
                                "bg": "bg",
                                "bs": "bs",
                                "ca": "ca",
                                "cs": "cs",
                                "cy": "cy",
                                "da": "da",
                                "de": "de",
                                "el": "el",
                                "test\\grc": "grc",
                                "eo": "eo",
                                "es": "es",
                                "es": "es-ES",
                                "es-la": "es-419",
                                "et": "et",
                                "fi": "fi",
                                "fr": "fr",
                                "fr-be": "fr-BE",
                                "hi": "hi",
                                "hr": "hr",
                                "hu": "hu",
                                "hy": "hy",
                                "hy-west": "hy-arevmda",
                                "id": "id",
                                "is": "is",
                                "it": "it",
                                "test\\jbo": "jbo",
                                "ka": "ka",
                                "kn": "kn",
                                "ku": "ku",
                                "la": "la",
                                "lv": "lv",
                                "mk": "mk",
                                "ml": "ml",
                                "test\\nci": "nci",
                                "nl": "nl",
                                "no": "no",
                                "test\\pap": "pap",
                                "pl": "pl",
                                "pt": "pt-BR",
                                "pt-pt": "pt-PT",
                                "ro": "ro",
                                "ru": "ru",
                                "sk": "sk",
                                "sq": "sq",
                                "sr": "sr",
                                "sv": "sv",
                                "sw": "sw",
                                "ta": "ta",
                                "tr": "tr",
                                "vi": "vi",
                                "zh": "zh-cmn",
                                "zh-yue": "zh-yue",
                                "yue": "zh-yue"
                            }
                        }
                    ]
                }
            }
        },
        "configure": [
            "settings.configs"
        ],
        "restore": [
            "settings.configs"
        ],
        "update": [
          "stop",
          "configure",
          "start"
        ],
        "start": [
            {
                "type": "gpii.launch.exec",
                "command": "\"${{registry}.HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\nvda.exe\\}\""
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.closeProcessByName",
                "filename": "nvda_service.exe"
            },{
                "type": "gpii.windows.closeProcessByName",
                "filename": "nvda.exe"
            }
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.registryKeyExists",
                "hKey": "HKEY_LOCAL_MACHINE",
                "path": "Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\nvda.exe",
                "subPath": "",
                "dataType": "REG_SZ"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "nvda"
            }
        ]
    },

    "trace.easyOne.communicator.windows": {
        "name": "EasyOne Communicator Windows",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },

        "settingsHandlers": {
            "configure": {
                "type": "gpii.settingsHandlers.noSettings",
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/simplification"
                ]
            }
        },
        "start": [
            {
                "type": "gpii.launch.exec",
                "command": "\"${{registry}.HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\firefox.exe\\}\" http://easyone.gpii.net/user/${{userToken}}"
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.closeProcessByName",
                "filename": "firefox.exe"
            }
        ],
        // Although there are no settings to deal with, we need to pass through
        // the "configure" action in order to proceed with the "stop" directive
        // when keying out. This is a current limitation of the system, you can
        // check https://issues.gpii.net/browse/GPII-2106 and
        // https://issues.gpii.net/browse/GPII-1235 for more detailed information.
        //
        "configure": [ "settings.configure" ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "firefox"
            }
        ]
    },
/*
    "trace.easyOne.sudan.windows": {
        "name": "EasyOne Communicator Sudan",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.settingsHandlers.noSettings",
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/pictorialSimplification"
                ]
            }
        },
        "start": [
            {
                "type": "gpii.launch.exec",
                "command": "\"${{registry}.HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\firefox.exe\\}\" http://easyone.gpii.net/sudan"
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.closeProcessByName",
                "filename": "firefox.exe"
            }
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "firefox"
            }
        ]
    },
*/
    "webinsight.webAnywhere.windows": {
        "name": "Web Anywhere",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.settingsHandlers.noSettings",
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/screenReaderTTSEnabled"
                ]
            }
        },
         "start": [
            {
                "type": "gpii.launch.exec",
                "command": "\"${{registry}.HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\firefox.exe\\}\" \"http://webanywhere.cs.washington.edu/beta/?starting_url=http%3A%2F%2Fcloud4all.info\""
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.closeProcessByName",
                "filename": "firefox.exe"
            }
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "firefox"
            }
        ]
    },

    "net.opendirective.maavis": {
        "name": "maavis",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },

        "settingsHandlers": {
            "configuration": {
                "type": "gpii.settingsHandlers.JSONSettingsHandler",
                "liveness": "manualRestart",
                "options": {
                    "filename": "${{environment}.MAAVIS_HOME}\\MaavisMedia\\Users\\Default\\userconfig.json"
                },
                "supportedSettings": {
                    "speakOnActivate": {},
                    "speakTitles": {},
                    "speakLabels": {},
                    "theme": {}
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/selfVoicingEnabled",
                    "http://registry\\.gpii\\.net/common/highContrastEnabled",
                    "http://registry\\.gpii\\.net/common/highContrastTheme"
                ],
                "capabilitiesTransformations": {
                    "transform": [
                        {
                            "type": "fluid.transforms.condition",
                            "conditionPath": "http://registry\\.gpii\\.net/common/selfVoicingEnabled",
                            "outputPath": "speakOnActivate",
                            "true": "yes",
                            "false": "no"
                        }, {
                            "type": "fluid.transforms.condition",
                            "conditionPath": "http://registry\\.gpii\\.net/common/selfVoicingEnabled",
                            "outputPath": "speakTitles",
                            "true": "yes",
                            "false": "no"
                        }, {
                            "type": "fluid.transforms.condition",
                            "conditionPath": "http://registry\\.gpii\\.net/common/selfVoicingEnabled",
                            "outputPath": "speakLabels",
                            "true": "yes",
                            "false": "no"
                        }, {
                            "type": "fluid.transforms.condition",
                            "conditionPath": "http://registry\\.gpii\\.net/common/highContrastEnabled",
                            "condition": false,
                            "outputPath": "theme",
                            "false": "colour",
                            "true": {
                                "transform": {
                                    "type": "fluid.transforms.valueMapper",
                                    "defaultInputPath": "http://registry\\.gpii\\.net/common/highContrastTheme",
                                    "match": {
                                        "black-white": "bw",
                                        "white-black": "bw",
                                        "black-yellow": "hc",
                                        "yellow-black": "hc"
                                    },
                                    "noMatch": {
                                        "outputValue": "bw"
                                    }
                                }
                            }
                        }
                    ]
                },
                "inverseCapabilitiesTransformations": {}
            }
        },
        "configure": [
            "settings.configuration"
        ],
        "restore": [
            "settings.configuration"
        ],
        "start": [
            {
                "type": "gpii.launch.exec",
                "command": "${{environment}.ComSpec} /c \"cd ${{environment}.MAAVIS_HOME} && MaavisPortable.cmd\""
            }
        ],
        "stop": [
            {
                "type": "gpii.windows.closeProcessByName",
                "filename": "firefox.exe"
            }
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "MaavisPortable"
            }
        ]
    },

    "com.microsoft.windows.highContrast": {
        "name": "Windows High Contrast",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.spiSettingsHandler",
                "liveness": "live",
                "options": {
                    "getAction": "SPI_GETHIGHCONTRAST",
                    "setAction": "SPI_SETHIGHCONTRAST",
                    "uiParam": "struct_size",
                    "pvParam": {
                        "type": "struct",
                        "name": "HIGHCONTRAST"
                    },
                    "verifySettings": true
                },
                "supportedSettings": {
                    "HighContrastOn": {
                        "schema": {
                            "title": "High Contrast",
                            "description": "Whether to enable/disable High Contrast",
                            "type": "boolean",
                            "default": false
                        }
                    }
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/highContrastEnabled"
                ],
                "capabilitiesTransformations": {
                    "HighContrastOn": {
                        "transform": {
                            "type": "fluid.transforms.value",
                            "inputPath": "http://registry\\.gpii\\.net/common/highContrastEnabled",
                            "outputPath": "value"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": "pvParam.dwFlags.HCF_HIGHCONTRASTON"
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/highContrastEnabled": "HighContrastOn.value"
                }
            },
            "configureTheme": {
                "type": "gpii.windows.registrySettingsHandler",
                "liveness": "live",
                "options": {
                    "hKey": "HKEY_CURRENT_USER",
                    "path": "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes",
                    "dataTypes": {
                        "LastHighContrastTheme": "REG_SZ"
                    }
                },
                "supportedSettings": {
                    "LastHighContrastTheme": {
                        "schema": {
                            "title": "High Contrast theme",
                            "description": "High Contrast Theme",
                            "type": "string",
                            "default": "%SystemRoot%\\resources\\Ease of Access Themes\\hcwhite.theme",
                            "enum": [
                                "%SystemRoot%\\resources\\Ease of Access Themes\\hcwhite.theme",
                                "%SystemRoot%\\resources\\Ease of Access Themes\\hcblack.theme",
                                "%SystemRoot%\\resources\\Ease of Access Themes\\hc1.theme",
                                "%SystemRoot%\\resources\\Ease of Access Themes\\hc1.theme"]
                        }
                    }
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/highContrastTheme"
                ],
                "capabilitiesTransformations": {
                    "LastHighContrastTheme": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "http://registry\\.gpii\\.net/common/highContrastTheme",
                            "match": {
                                "black-white": "%SystemRoot%\\resources\\Ease of Access Themes\\hcwhite.theme",
                                "white-black": "%SystemRoot%\\resources\\Ease of Access Themes\\hcblack.theme",
                                "black-yellow": "%SystemRoot%\\resources\\Ease of Access Themes\\hc1.theme",
                                "yellow-black": "%SystemRoot%\\resources\\Ease of Access Themes\\hc1.theme",
                                "lime-black": "%SystemRoot%\\resources\\Ease of Access Themes\\hc2.theme"
                            }
                        }
                    }
                }
            }
        },
        "configure": [
            "settings.configureTheme",
            "settings.configure"
        ],
        "restore": [
            "settings.configureTheme",
            "settings.configure"
        ],
        "update": [
            "settings.configureTheme",
            "settings.configure"
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "com.microsoft.windows.stickyKeys": {
        "name": "Windows StickyKeys",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.spiSettingsHandler",
                "liveness": "live",
                "options": {
                    "getAction": "SPI_GETSTICKYKEYS",
                    "setAction": "SPI_SETSTICKYKEYS",
                    "uiParam": "struct_size",
                    "pvParam": {
                        "type": "struct",
                        "name": "STICKYKEYS"
                    },
                    "verifySettings": true
                },
                "supportedSettings": {
                    "StickyKeysOn": {}
                },
                "capabilities": [],
                "capabilitiesTransformations": {
                    "StickyKeysOn": {
                        "transform": {
                            "type": "fluid.transforms.value",
                            "inputPath": "http://registry\\.gpii\\.net/common/stickyKeys",
                            "outputPath": "value"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": "pvParam.dwFlags.SKF_STICKYKEYSON"
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/stickyKeys": "StickyKeysOn.value"
                }
            }
        },
        "update": [
          "configure"
        ],
        "configure": [
            "settings.configure"
        ],
        "restore": [
            "settings.configure"
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "com.microsoft.windows.filterKeys": {
        "name": "Windows FilterKeys",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.spiSettingsHandler",
                "liveness": "live",
                "options": {
                    "getAction": "SPI_GETFILTERKEYS",
                    "setAction": "SPI_SETFILTERKEYS",
                    "uiParam": "struct_size",
                    "pvParam": {
                        "type": "struct",
                        "name": "FILTERKEYS"
                    },
                    "verifySettings": false
                },
                "supportedSettings": {
                    "FilterKeysEnable": {
                        "schema": {
                            "title": "Filter keys",
                            "description": "Enable/Disable filter keys",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "SlowKeysInterval": {
                        "schema": {
                            "title": "Slow keys interval",
                            "description": "Slow keys interval time in milliseconds",
                            "type": "number",
                            "default": 0,  // 0 means no interval time
                            "divisibleBy": 1
                        }
                    },
                    "BounceKeysInterval": {
                        "schema": {
                            "title": "Bounce keys interval",
                            "description": "Bounce keys interval time in milliseconds",
                            "type": "number",
                            "default": 0,
                            "divisibleBy": 1
                        }
                    }
                },
                "capabilities": [],
                "capabilitiesTransformations": {
                    "FilterKeysEnable": {
                        "transform": {
                            "type": "fluid.transforms.binaryOp",
                            "leftPath": "http://registry\\.gpii\\.net/common/debounceEnabled",
                            "left": false,
                            "rightPath": "http://registry\\.gpii\\.net/common/slowKeysEnabled",
                            "right": false,
                            "operator": "||",
                            "outputPath": "value"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": "pvParam.dwFlags.FKF_FILTERKEYSON"
                            }
                        }
                    },
                    "SlowKeysInterval": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "conditionPath": "http://registry\\.gpii\\.net/common/slowKeysEnabled",
                            "true": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/slowKeysInterval",
                                    "factor": 1000
                                }
                            },
                            "false": 0,
                            "outputPath": "value"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": "pvParam.iWaitMSec"
                            }
                        }
                    },
                    "BounceKeysInterval": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "http://registry\\.gpii\\.net/common/slowKeysEnabled",
                                    "left": false,
                                    "right": false,
                                    "operator": "==="
                                }
                            },
                            "true": {
                                "transform": {
                                    "type": "fluid.transforms.condition",
                                    "conditionPath": "http://registry\\.gpii\\.net/common/debounceEnabled",
                                    "true": {
                                        "transform": {
                                            "type": "fluid.transforms.linearScale",
                                            "inputPath": "http://registry\\.gpii\\.net/common/debounceInterval",
                                            "factor": 1000
                                        }
                                    },
                                    "false": 0,
                                    "outputPath": "value"
                                }
                            },
                            "false": 0,
                            "outputPath": "value"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": "pvParam.iBounceMSec"
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/slowKeysEnabled": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "SlowKeysInterval.value",
                                    "right": 0,
                                    "operator": ">"
                                }
                            },
                            "truePath": "FilterKeysEnable.value"
                        }
                    },
                    "http://registry\\.gpii\\.net/common/slowKeysInterval": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "SlowKeysInterval.value",
                                    "right": 0,
                                    "operator": ">"
                                }
                            },
                            "true": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "SlowKeysInterval.value",
                                    "factor": 0.001
                                }
                            }
                        }
                    },
                    "http://registry\\.gpii\\.net/common/debounceEnabled": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "BounceKeysInterval.value",
                                    "right": 0,
                                    "operator": ">"
                                }
                            },
                            "truePath": "FilterKeysEnable.value"
                        }
                    },
                    "http://registry\\.gpii\\.net/common/debounceInterval": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "condition": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "BounceKeysInterval.value",
                                    "right": 0,
                                    "operator": ">"
                                }
                            },
                            "true": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "BounceKeysInterval.value",
                                    "factor": 0.001
                                }
                            }
                        }
                    }
                }
            }
        },
        "configure": [
            "settings.configure"
        ],
        "update": [
          "configure"
        ],
        "restore": [
            "settings.configure"
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "com.microsoft.windows.mouseKeys": {
        "name": "Windows MouseKeys",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.spiSettingsHandler",
                "liveness": "live",
                "options": {
                    "getAction": "SPI_GETMOUSEKEYS",
                    "setAction": "SPI_SETMOUSEKEYS",
                    "uiParam": "struct_size",
                    "pvParam": {
                        "type": "struct",
                        "name": "MOUSEKEYS"
                    },
                    "verifySettings": true
                },
                "supportedSettings": {
                    "MouseKeysOn": {
                        "schema": {
                            "title": "Mouse keys",
                            "description": "Enable/Disable mouse keys",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "MaxSpeed": {
                        "schema": {
                            "title": "Mouse keys speed",
                            "description": "Speed of mouse keys",
                            "type": "number",
                            "divisibleBy": 10
                        }
                    },
                    "Acceleration": {
                        "schema": {
                            "title": "Mouse keys acceleration",
                            "description": "Acceleration of mouse keys",
                            "type": "number",
                            "min": -1000, // TODO: Not clear how to describe this setting
                            "max": 1000
                        }
                    }
                },
                "capabilities": [],
                "capabilitiesTransformations": {
                    "MouseKeysOn": {
                        "transform": {
                            "type": "fluid.transforms.value",
                            "inputPath": "http://registry\\.gpii\\.net/common/mouseEmulationEnabled",
                            "outputPath": "value"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": "pvParam.dwFlags.MKF_MOUSEKEYSON"
                            }
                        }
                    },
                    "MaxSpeed": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/cursorSpeed",
                                    "factor": 350,
                                    "offset": 10
                                }
                            },
                            "outputPath": "value"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": "pvParam.iMaxSpeed"
                            }
                        }
                    },
                    "Acceleration": {
                        "transform": {
                            "type": "fluid.transforms.binaryOp",
                            "left": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/initDelay",
                                    "factor": 1000,
                                    "outputPath": "value"
                                }
                            },
                            "right": {
                                "transform": {
                                    "type": "fluid.transforms.linearScale",
                                    "inputPath": "http://registry\\.gpii\\.net/common/cursorAcceleration",
                                    "factor": 1000,
                                    "offset": 1000,
                                    "outputPath": "value"
                                }
                            },
                            "operator": "+"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": "pvParam.iTimeToMaxSpeed"
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/mouseEmulationEnabled": "MouseKeysOn.value",
                    "http://registry\\.gpii\\.net/common/cursorSpeed": {
                        "transform": {
                            "type": "fluid.transforms.linearScale",
                            "inputPath": "MaxSpeed.value",
                            "factor": 0.00285714285714,
                            "offset": -0.0285714285714

                        }
                    }
                }
            }
        },
        "update": [
          "configure"
        ],
        "configure": [
            "settings.configure"
        ],
        "restore": [
            "settings.configure"
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "com.microsoft.windows.mouseTrailing": {
        "name": "Windows Mouse Trailing",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.spiSettingsHandler",
                "liveness": "live",
                "options": {
                    "getAction": "SPI_GETMOUSETRAILS",
                    "setAction": "SPI_SETMOUSETRAILS",
                    "uiParam": 0,
                    "pvParam": {
                        "type": "UINT"
                    },
                    "verifySettings": true
                },
                "supportedSettings": {
                    "MouseTrails": {
                        "schema": { // Exactly the same schema as mouseTrailing common term
                            "title": "Mouse trails",
                            "description": "Amount of mouse trailing",
                            "type": "number",
                            "min": 0,
                            "max": 10,
                            "divisibleBy": 1
                        }
                    }
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/mouseTrailing"
                ],
                "capabilitiesTransformations": {
                    "MouseTrails": {
                        "transform": {
                            "type": "fluid.transforms.value",
                            "inputPath": "http://registry\\.gpii\\.net/common/mouseTrailing",
                            "outputPath": "value"
                        },
                        "path": {
                            "transform": {
                                "type": "fluid.transforms.literalValue",
                                "input": {
                                    "get": "pvParam",
                                    "set": "uiParam"
                                }
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                    "http://registry\\.gpii\\.net/common/mouseTrailing": "MouseTrails.value"
                }
            }
        },
        "update": [
          "configure"
        ],
        "configure": [
            "settings.configure"
        ],
        "restore": [
            "settings.configure"
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "com.microsoft.windows.screenResolution": {
        "name": "Windows Screen Resolution",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configuration": {
                "type": "gpii.windows.displaySettingsHandler",
                "liveness": "liveRestart",
                "capabilities": [
                    "display.screenEnhancement.screenResolution",
                    "applications.com\\.microsoft\\.windows\\.screenResolution.id"
                ],
                "supportedSettings": {
                    "screen-resolution": {
                        "schema": {
                            "title": "Screen resolution",
                            "description": "Screen resolution of the default display",
                            "type": "array", // TODO: Not sure about this type
                            "enum": [] // TODO: This must be filled in on the fly with available screen resolutions
                        }
                    }
                }
            }
        },
        "configure": [
            "settings.configuration"
        ],
        "restore": [
            "settings.configuration"
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "com.microsoft.windows.screenDPI": {
        "name": "Windows DPI",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=6.2"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.displaySettingsHandler",
                "liveness": "live",
                "supportedSettings": {
                    "screen-dpi": {}
                },
                "capabilities": [
                    "display.screenEnhancement.screenScale",
                    "applications.com\\.microsoft\\.windows\\.screenDPI.id"
                ],
                "supportedSettings": {
                    "screen-dpi": {
                        "schema": {
                            "title": "Screen DPI",
                            "description": "Screen DPI of the default display",
                            "type": "number",
                            "minimum": 1,
                            "maximum": 5 // Taken from dpiWindows10.js, may not be appropriate
                        }
                    }
                },
                "capabilitiesTransformations": {
                    "screen-dpi": "http://registry\\.gpii\\.net/common/DPIScale"
                }
            }
        },
        "configure": [
            "settings.configure"
        ],
        "restore": [
            "settings.configure"
        ],
        "update": [
          "configure"
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "com.microsoft.windows.cursors": {
        "name": "Windows Cursors",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.windows.registrySettingsHandler",
                "liveness": "liveRestart",
                "options": {
                    "hKey": "HKEY_CURRENT_USER",
                    "path": "Control Panel\\Cursors",
                    "dataTypes": {
                        "Arrow": "REG_SZ",
                        "Hand": "REG_SZ",
                        "Help": "REG_SZ",
                        "AppStarting": "REG_SZ",
                        "No": "REG_SZ",
                        "NWPen": "REG_SZ",
                        "SizeAll": "REG_SZ",
                        "SizeNESW": "REG_SZ",
                        "SizeNS": "REG_SZ",
                        "SizeNWSE": "REG_SZ",
                        "SizeWE": "REG_SZ",
                        "UpArrow": "REG_SZ",
                        "Wait": "REG_SZ"
                    },
                    "verifySettings": true
                },
                "supportedSettings": {
                    "Arrow": {},
                    "Hand": {},
                    "Help": {},
                    "AppStarting": {},
                    "No": {},
                    "NWPen": {},
                    "SizeAll": {},
                    "SizeNESW": {},
                    "SizeNS": {},
                    "SizeNWSE": {},
                    "SizeWE": {},
                    "UpArrow": {},
                    "Wait": {}
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/cursorSize"
                ],
                "capabilitiesTransformations": {
                    "Arrow": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_arrow.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_arrow_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_arrow_xl.cur"
                                }
                            ]
                        }
                    },
                    "Hand": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_link.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_link_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_link_xl.cur"
                                }
                            ]
                        }
                    },
                    "Help": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_helpsel.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_helpsel_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_helpsel_xl.cur"
                                }
                            ]
                        }
                    },
                    "AppStarting": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_working.ani"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_working_l.ani"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_working_xl.ani"
                                }
                            ]
                        }
                    },
                    "No": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_unavail.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_unavail_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_unavail_xl.cur"
                                }
                            ]
                        }
                    },
                    "NWPen": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_pen.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_pen_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_pen_xl.cur"
                                }
                            ]
                        }
                    },
                    "SizeAll": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_move.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_move_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_move_xl.cur"
                                }
                            ]
                        }
                    },
                    "SizeNESW": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_nesw.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_nesw_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_nesw_xl.cur"
                                }
                            ]
                        }
                    },
                    "SizeNS": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_ns.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_ns_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_ns_xl.cur"
                                }
                            ]
                        }
                    },
                    "SizeNWSE": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_nwse.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_nwse_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_nwse_xl.cur"
                                }
                            ]
                        }
                    },
                    "SizeWE": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_ew.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_ew_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_ew_xl.cur"
                                }
                            ]
                        }
                    },
                    "UpArrow": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_up.cur"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_up_l.cur"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_up_xl.cur"
                                }
                            ]
                        }
                    },
                    "Wait": {
                        "transform": {
                            "type": "fluid.transforms.quantize",
                            "inputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "ranges": [
                                {
                                    "upperBound": 0.333,
                                    "output": "%SystemRoot%\\cursors\\aero_busy.ani"
                                }, {
                                    "upperBound": 0.666,
                                    "output": "%SystemRoot%\\cursors\\aero_busy_l.ani"
                                }, {
                                    "output": "%SystemRoot%\\cursors\\aero_busy_xl.ani"
                                }
                            ]
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {
                     "transform": [
                        {
                            "type": "fluid.transforms.valueMapper",
                            "defaultInputPath": "Arrow",
                            "defaultOutputPath": "http://registry\\.gpii\\.net/common/cursorSize",
                            "match": {
                                "%SystemRoot%\\cursors\\aero_arrow.cur": 0.32,
                                "%SystemRoot%\\cursors\\aero_arrow_l.cur": 0.65,
                                "%SystemRoot%\\cursors\\aero_arrow_xl.cur": 1
                            }
                        }
                    ]
                }
            }
        },
        "configure": [
            "settings.configure"
        ],
        "restore": [
            "settings.configure",
            {
                "type": "gpii.windows.spiSettingsHandler.updateCursors"
            }
        ],
        "update": [
            "configure",
            "start"
        ],
        "start": [
            {
                "type": "gpii.windows.spiSettingsHandler.updateCursors"
            }
        ],
        "stop": [
        ],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },

    "eu.singularlogic.pixelsense.sociable": {
        "name": "Sociable",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configuration": {
                "type": "gpii.settingsHandlers.XMLHandler",
                "liveness": "manualRestart",
                "options": {
                    "filename": "C:\\Sociable\\Configuration.xml",
                    "encoding": "utf-8",
                    "xml-tag": "<?xml version=\"1.0\"?>"
                },
                "supportedSettings": {
                    "user.$t": {},
                    "expert.$t": {},
                    "careCenter.$t": {},
                    "screenReaderTTSEnabled": {},
                    "highContrastEnabled": {},
                    "fontSize": {}
                },
                "capabilities": [],
                "capabilitiesTransformations": {
                    "user.$t": {
                        "literalValue": 1
                    },
                    "expert.$t": {
                        "literalValue": 1
                    },
                    "careCenter.$t": {
                        "literalValue": 1
                    },
                    "screenReaderTTSEnabled": {
                        "value": "http://registry\\.gpii\\.net/common/screenReaderTTSEnabled"
                    },
                    "highContrastEnabled": {
                        "value": "http://registry\\.gpii\\.net/common/highContrastEnabled"
                    },
                    "fontSize": {
                        "value": {
                            "transform": {
                                "type": "fluid.transforms.quantize",
                                "inputPath": "http://registry\\.gpii\\.net/common/fontSize",
                                "ranges": [{
                                    "upperBound": 14,
                                    "output": "normal"
                                },{
                                    "output": "large"
                                }]
                            }
                        }
                    }
                },
                "inverseCapabilitiesTransformations": {}
            }
        },
        "configure": [
            "settings.configuration"
        ],
        "restore": [
            "settings.configuration"
        ],
        "start": [
            {
                "type": "gpii.launch.exec",
                "command": "C:\\Sociable\\Cloud4All.exe"
            }
        ],
        "stop": [
            {
                "type": "gpii.launch.exec",
                "command": "C:\\Sociable\\Cloud4All.exe -stop"
            }
        ],
        "isRunning": [
            {
                "type": "gpii.processReporter.find",
                "command": "Cloud4Allcd "
            }
        ]
    },

    "net.gpii.uioPlus": {
        "name": "UIO+",
        "contexts": {
            "OS": [{
                    "id": "win32",
                    "version": ">=5.0"
            }]
        },
        "settingsHandlers": {
            "configuration": {
                "type": "gpii.settingsHandlers.webSockets",
                "liveness": "live",
                "options": {
                    "path": "net.gpii.uioPlus"
                },
                "supportedSettings": {
                    "lineSpace": {},
                    "fontSize": {},
                    "characterSpace": {},
                    "inputsLargerEnabled": {},
                    "contrastTheme": {},
                    "selfVoicingEnabled": {},
                    "selectionTheme": {},
                    "tableOfContentsEnabled": {},
                    "dictionaryEnabled": {},
                    "simplifiedUiEnabled": {},
                    "syllabificationEnabled": {}
                },
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/lineSpace",
                    "http://registry\\.gpii\\.net/common/fontSize",
                    "http://registry\\.gpii\\.net/common/characterSpace",
                    "http://registry\\.gpii\\.net/common/inputsLargerEnabled",
                    "http://registry\\.gpii\\.net/common/highContrastEnabled",
                    "http://registry\\.gpii\\.net/common/highContrastTheme",
                    "http://registry\\.gpii\\.net/common/selfVoicingEnabled",
                    "http://registry\\.gpii\\.net/common/highlightColor",
                    "http://registry\\.gpii\\.net/common/tableOfContents",
                    "http://registry\\.gpii\\.net/common/supportTool",
                    "http://registry\\.gpii\\.net/common/simplifiedUiEnabled"
                ],
                "capabilitiesTransformations": {
                    "lineSpace": "http://registry\\.gpii\\.net/common/lineSpace",
                    "fontSize": {
                        "transform": {
                            "type": "fluid.transforms.round",
                            "scale": 1,
                            "input": {
                                "transform": {
                                    "type": "fluid.transforms.binaryOp",
                                    "leftPath": "http://registry\\.gpii\\.net/common/fontSize",
                                    "right": 12,
                                    "operator": "/"
                                }
                            }
                        }
                    },
                    "characterSpace": "http://registry\\.gpii\\.net/common/characterSpace",
                    "inputsLargerEnabled": "http://registry\\.gpii\\.net/common/inputsLargerEnabled",
                    "contrastTheme": {
                        "transform": {
                            "type": "fluid.transforms.condition",
                            "conditionPath": "http://registry\\.gpii\\.net/common/highContrastEnabled",
                            "true": {
                                "transform": {
                                    "type": "fluid.transforms.valueMapper",
                                    "defaultInputPath": "http://registry\\.gpii\\.net/common/highContrastTheme",
                                    "defaultOutputValue": "default",
                                    "match": {
                                        "black-white": "bw",
                                        "white-black": "wb",
                                        "black-yellow": "by",
                                        "yellow-black": "yb"
                                    }
                                }
                            },
                            "false": "default"
                        }
                    },
                    "selfVoicingEnabled": "http://registry\\.gpii\\.net/common/selfVoicingEnabled",
                    "selectionTheme": "http://registry\\.gpii\\.net/common/highlightColor",
                    "tableOfContentsEnabled": "http://registry\\.gpii\\.net/common/tableOfContents",
                    "dictionaryEnabled": {
                        "transform": {
                            "type": "fluid.transforms.valueMapper",
                            "match": [{
                                "inputValue": {
                                    "dictionaryEnabled": true
                                },
                                "outputValue": true
                            }],
                            "noMatch": {
                                "outputValue": false
                            },
                            "defaultInput": {
                                "transform": {
                                    "type": "fluid.transforms.arrayToSetMembership",
                                    "inputPath": "http://registry\\.gpii\\.net/common/supportTool",
                                    "options": {
                                        "dictionary": "dictionaryEnabled"
                                    }
                                }
                            }
                        }
                    },
                    "simplifiedUiEnabled": "http://registry\\.gpii\\.net/common/simplifiedUiEnabled",
                    "syllabificationEnabled": "http://registry\\.gpii\\.net/common/syllabificationEnabled"
                },
                "inverseCapabilitiesTransformations": {}
            }
        },
        "configure": [
            "settings.configuration"
        ],
        "restore": [
            "settings.configuration"
        ],
        "update": [
          "configure"
        ],
        "start": [],
        "stop": [],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ]
    },
    "net.gpii.test.speechControl": { // This solution does not exist in real life and has been added strictly for user testing/demoing
        "name": "GPII Test solution for speech control of the computer",
        "contexts": {
            "OS": [
                {
                    "id": "win32",
                    "version": ">=5.0"
                }
            ]
        },
        "settingsHandlers": {
            "configure": {
                "type": "gpii.settingsHandlers.noSettings",
                "liveness": "OSRestart",
                "capabilities": [
                    "http://registry\\.gpii\\.net/common/speechControl"
                ],
                "supportedSettings": {}
            }
        },
        "configure": [],
        "restore": [],
        "start": [],
        "stop": [],
        "isInstalled": [
            {
                "type": "gpii.deviceReporter.alwaysInstalled"
            }
        ],
        "isRunning": []
    }
}
